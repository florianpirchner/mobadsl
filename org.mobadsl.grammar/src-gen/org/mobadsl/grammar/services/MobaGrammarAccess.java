/*
 * generated by Xtext 2.9.0.beta6
 */
package org.mobadsl.grammar.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MobaGrammarAccess extends AbstractGrammarElementFinder {
	
	public class MobaApplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaApplication");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApplicationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFeaturesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFeaturesMobaApplicationFeatureParserRuleCall_3_0 = (RuleCall)cFeaturesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MobaApplication:
		//	'application' name=ID '{'
		//	features+=MobaApplicationFeature* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'application' name=ID '{' features+=MobaApplicationFeature* '}'
		public Group getGroup() { return cGroup; }
		
		//'application'
		public Keyword getApplicationKeyword_0() { return cApplicationKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//features+=MobaApplicationFeature*
		public Assignment getFeaturesAssignment_3() { return cFeaturesAssignment_3; }
		
		//MobaApplicationFeature
		public RuleCall getFeaturesMobaApplicationFeatureParserRuleCall_3_0() { return cFeaturesMobaApplicationFeatureParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class MobaApplicationFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaApplicationFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMobaDataTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMobaTemplateParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMobaConstantParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMobaSettingsParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cMobaDataParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cMobaServiceParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cMobaGeneratorParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//MobaApplicationFeature:
		//	MobaDataType | MobaTemplate | MobaConstant | MobaSettings | MobaData | MobaService | MobaGenerator;
		@Override public ParserRule getRule() { return rule; }
		
		//MobaDataType | MobaTemplate | MobaConstant | MobaSettings | MobaData | MobaService | MobaGenerator
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MobaDataType
		public RuleCall getMobaDataTypeParserRuleCall_0() { return cMobaDataTypeParserRuleCall_0; }
		
		//MobaTemplate
		public RuleCall getMobaTemplateParserRuleCall_1() { return cMobaTemplateParserRuleCall_1; }
		
		//MobaConstant
		public RuleCall getMobaConstantParserRuleCall_2() { return cMobaConstantParserRuleCall_2; }
		
		//MobaSettings
		public RuleCall getMobaSettingsParserRuleCall_3() { return cMobaSettingsParserRuleCall_3; }
		
		//MobaData
		public RuleCall getMobaDataParserRuleCall_4() { return cMobaDataParserRuleCall_4; }
		
		//MobaService
		public RuleCall getMobaServiceParserRuleCall_5() { return cMobaServiceParserRuleCall_5; }
		
		//MobaGenerator
		public RuleCall getMobaGeneratorParserRuleCall_6() { return cMobaGeneratorParserRuleCall_6; }
	}
	public class MobaTemplateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaTemplate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUseTemplateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cTemplateAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final CrossReference cTemplateMobaApplicationCrossReference_1_0_0 = (CrossReference)cTemplateAssignment_1_0.eContents().get(0);
		private final RuleCall cTemplateMobaApplicationIDTerminalRuleCall_1_0_0_1 = (RuleCall)cTemplateMobaApplicationCrossReference_1_0_0.eContents().get(1);
		private final Assignment cDownloadTemplateAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cDownloadTemplateDOWNLOAD_TEMPLATETerminalRuleCall_1_1_0 = (RuleCall)cDownloadTemplateAssignment_1_1.eContents().get(0);
		
		/// **
		// * Will import a Moba-Application.
		// * / MobaTemplate:
		//	'use template' (template=[MobaApplication] | downloadTemplate=DOWNLOAD_TEMPLATE);
		@Override public ParserRule getRule() { return rule; }
		
		//'use template' (template=[MobaApplication] | downloadTemplate=DOWNLOAD_TEMPLATE)
		public Group getGroup() { return cGroup; }
		
		//'use template'
		public Keyword getUseTemplateKeyword_0() { return cUseTemplateKeyword_0; }
		
		//(template=[MobaApplication] | downloadTemplate=DOWNLOAD_TEMPLATE)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//template=[MobaApplication]
		public Assignment getTemplateAssignment_1_0() { return cTemplateAssignment_1_0; }
		
		//[MobaApplication]
		public CrossReference getTemplateMobaApplicationCrossReference_1_0_0() { return cTemplateMobaApplicationCrossReference_1_0_0; }
		
		//ID
		public RuleCall getTemplateMobaApplicationIDTerminalRuleCall_1_0_0_1() { return cTemplateMobaApplicationIDTerminalRuleCall_1_0_0_1; }
		
		//downloadTemplate=DOWNLOAD_TEMPLATE
		public Assignment getDownloadTemplateAssignment_1_1() { return cDownloadTemplateAssignment_1_1; }
		
		//DOWNLOAD_TEMPLATE
		public RuleCall getDownloadTemplateDOWNLOAD_TEMPLATETerminalRuleCall_1_1_0() { return cDownloadTemplateDOWNLOAD_TEMPLATETerminalRuleCall_1_1_0; }
	}
	public class MobaGeneratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaGenerator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cActiveAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cActiveActiveKeyword_0_0 = (Keyword)cActiveAssignment_0.eContents().get(0);
		private final Keyword cGeneratorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFeaturesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFeaturesMobaGeneratorFeatureParserRuleCall_4_0 = (RuleCall)cFeaturesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MobaGenerator:
		//	active?='active'? 'generator' name=ID '{'
		//	features+=MobaGeneratorFeature*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//active?='active'? 'generator' name=ID '{' features+=MobaGeneratorFeature* '}'
		public Group getGroup() { return cGroup; }
		
		//active?='active'?
		public Assignment getActiveAssignment_0() { return cActiveAssignment_0; }
		
		//'active'
		public Keyword getActiveActiveKeyword_0_0() { return cActiveActiveKeyword_0_0; }
		
		//'generator'
		public Keyword getGeneratorKeyword_1() { return cGeneratorKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//features+=MobaGeneratorFeature*
		public Assignment getFeaturesAssignment_4() { return cFeaturesAssignment_4; }
		
		//MobaGeneratorFeature
		public RuleCall getFeaturesMobaGeneratorFeatureParserRuleCall_4_0() { return cFeaturesMobaGeneratorFeatureParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class MobaGeneratorFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaGeneratorFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMobaGeneratorIDFeatureParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMobaGeneratorMixinFeatureParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MobaGeneratorFeature:
		//	MobaGeneratorIDFeature | MobaGeneratorMixinFeature;
		@Override public ParserRule getRule() { return rule; }
		
		//MobaGeneratorIDFeature | MobaGeneratorMixinFeature
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MobaGeneratorIDFeature
		public RuleCall getMobaGeneratorIDFeatureParserRuleCall_0() { return cMobaGeneratorIDFeatureParserRuleCall_0; }
		
		//MobaGeneratorMixinFeature
		public RuleCall getMobaGeneratorMixinFeatureParserRuleCall_1() { return cMobaGeneratorMixinFeatureParserRuleCall_1; }
	}
	public class MobaGeneratorIDFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaGeneratorIDFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIdKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cGeneratorConstAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final CrossReference cGeneratorConstMobaConstantCrossReference_2_0_0 = (CrossReference)cGeneratorConstAssignment_2_0.eContents().get(0);
		private final RuleCall cGeneratorConstMobaConstantIDTerminalRuleCall_2_0_0_1 = (RuleCall)cGeneratorConstMobaConstantCrossReference_2_0_0.eContents().get(1);
		private final Assignment cGeneratorStringAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cGeneratorStringSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cGeneratorStringAssignment_2_1.eContents().get(0);
		
		//MobaGeneratorIDFeature:
		//	'id' '=' (generatorConst=[MobaConstant] | generatorString=STRING);
		@Override public ParserRule getRule() { return rule; }
		
		//'id' '=' (generatorConst=[MobaConstant] | generatorString=STRING)
		public Group getGroup() { return cGroup; }
		
		//'id'
		public Keyword getIdKeyword_0() { return cIdKeyword_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//(generatorConst=[MobaConstant] | generatorString=STRING)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//generatorConst=[MobaConstant]
		public Assignment getGeneratorConstAssignment_2_0() { return cGeneratorConstAssignment_2_0; }
		
		//[MobaConstant]
		public CrossReference getGeneratorConstMobaConstantCrossReference_2_0_0() { return cGeneratorConstMobaConstantCrossReference_2_0_0; }
		
		//ID
		public RuleCall getGeneratorConstMobaConstantIDTerminalRuleCall_2_0_0_1() { return cGeneratorConstMobaConstantIDTerminalRuleCall_2_0_0_1; }
		
		//generatorString=STRING
		public Assignment getGeneratorStringAssignment_2_1() { return cGeneratorStringAssignment_2_1; }
		
		//STRING
		public RuleCall getGeneratorStringSTRINGTerminalRuleCall_2_1_0() { return cGeneratorStringSTRINGTerminalRuleCall_2_1_0; }
	}
	public class MobaGeneratorMixinFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaGeneratorMixinFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMixinKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cGeneratorRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cGeneratorRefMobaGeneratorCrossReference_1_0 = (CrossReference)cGeneratorRefAssignment_1.eContents().get(0);
		private final RuleCall cGeneratorRefMobaGeneratorIDTerminalRuleCall_1_0_1 = (RuleCall)cGeneratorRefMobaGeneratorCrossReference_1_0.eContents().get(1);
		
		//MobaGeneratorMixinFeature:
		//	'mixin' generatorRef=[MobaGenerator];
		@Override public ParserRule getRule() { return rule; }
		
		//'mixin' generatorRef=[MobaGenerator]
		public Group getGroup() { return cGroup; }
		
		//'mixin'
		public Keyword getMixinKeyword_0() { return cMixinKeyword_0; }
		
		//generatorRef=[MobaGenerator]
		public Assignment getGeneratorRefAssignment_1() { return cGeneratorRefAssignment_1; }
		
		//[MobaGenerator]
		public CrossReference getGeneratorRefMobaGeneratorCrossReference_1_0() { return cGeneratorRefMobaGeneratorCrossReference_1_0; }
		
		//ID
		public RuleCall getGeneratorRefMobaGeneratorIDTerminalRuleCall_1_0_1() { return cGeneratorRefMobaGeneratorIDTerminalRuleCall_1_0_1; }
	}
	public class MobaDataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaDataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDatatypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperTypeMobaDataTypeCrossReference_2_1_0 = (CrossReference)cSuperTypeAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperTypeMobaDataTypeIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSuperTypeMobaDataTypeCrossReference_2_1_0.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Assignment cPrimitiveAssignment_3_0 = (Assignment)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cPrimitiveIsPrimitiveKeyword_3_0_0 = (Keyword)cPrimitiveAssignment_3_0.eContents().get(0);
		private final Assignment cArrayAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cArrayIsArrayKeyword_3_1_0 = (Keyword)cArrayAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Alternatives cAlternatives_3_2_0 = (Alternatives)cGroup_3_2.eContents().get(0);
		private final Assignment cDateAssignment_3_2_0_0 = (Assignment)cAlternatives_3_2_0.eContents().get(0);
		private final Keyword cDateIsDateKeyword_3_2_0_0_0 = (Keyword)cDateAssignment_3_2_0_0.eContents().get(0);
		private final Assignment cTimeAssignment_3_2_0_1 = (Assignment)cAlternatives_3_2_0.eContents().get(1);
		private final Keyword cTimeIsTimeKeyword_3_2_0_1_0 = (Keyword)cTimeAssignment_3_2_0_1.eContents().get(0);
		private final Assignment cTimestampAssignment_3_2_0_2 = (Assignment)cAlternatives_3_2_0.eContents().get(2);
		private final Keyword cTimestampIsTimestampKeyword_3_2_0_2_0 = (Keyword)cTimestampAssignment_3_2_0_2.eContents().get(0);
		private final Group cGroup_3_2_1 = (Group)cGroup_3_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3_2_1_0 = (Keyword)cGroup_3_2_1.eContents().get(0);
		private final Alternatives cAlternatives_3_2_1_1 = (Alternatives)cGroup_3_2_1.eContents().get(1);
		private final Assignment cDateFormatStringAssignment_3_2_1_1_0 = (Assignment)cAlternatives_3_2_1_1.eContents().get(0);
		private final RuleCall cDateFormatStringSTRINGTerminalRuleCall_3_2_1_1_0_0 = (RuleCall)cDateFormatStringAssignment_3_2_1_1_0.eContents().get(0);
		private final Assignment cDateFormatConstAssignment_3_2_1_1_1 = (Assignment)cAlternatives_3_2_1_1.eContents().get(1);
		private final CrossReference cDateFormatConstMobaConstantCrossReference_3_2_1_1_1_0 = (CrossReference)cDateFormatConstAssignment_3_2_1_1_1.eContents().get(0);
		private final RuleCall cDateFormatConstMobaConstantIDTerminalRuleCall_3_2_1_1_1_0_1 = (RuleCall)cDateFormatConstMobaConstantCrossReference_3_2_1_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_2_1_2 = (Keyword)cGroup_3_2_1.eContents().get(2);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cConstraintsKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_3_1 = (Keyword)cGroup_3_3.eContents().get(1);
		private final Assignment cConstraintsAssignment_3_3_2 = (Assignment)cGroup_3_3.eContents().get(2);
		private final RuleCall cConstraintsMobaConstraintParserRuleCall_3_3_2_0 = (RuleCall)cConstraintsAssignment_3_3_2.eContents().get(0);
		private final Group cGroup_3_3_3 = (Group)cGroup_3_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_3_0 = (Keyword)cGroup_3_3_3.eContents().get(0);
		private final Assignment cConstraintsAssignment_3_3_3_1 = (Assignment)cGroup_3_3_3.eContents().get(1);
		private final RuleCall cConstraintsMobaConstraintParserRuleCall_3_3_3_1_0 = (RuleCall)cConstraintsAssignment_3_3_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_3_4 = (Keyword)cGroup_3_3.eContents().get(4);
		private final Assignment cEnumASTAssignment_3_4 = (Assignment)cUnorderedGroup_3.eContents().get(4);
		private final RuleCall cEnumASTMobaEnumParserRuleCall_3_4_0 = (RuleCall)cEnumASTAssignment_3_4.eContents().get(0);
		private final RuleCall cMobaPropertiesAbleParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//MobaDataType:
		//	'datatype' name=ID ('extends' superType=[MobaDataType])? (primitive?='isPrimitive'? & array?='isArray'? &
		//	((date?='isDate' | time?='isTime' | timestamp?='isTimestamp') ('(' (dateFormatString=STRING |
		//	dateFormatConst=[MobaConstant]) ')')?)?
		//	& ('constraints' '(' constraints+=MobaConstraint (',' constraints+=MobaConstraint)* ')')?
		//	& enumAST=MobaEnum?) MobaPropertiesAble?;
		@Override public ParserRule getRule() { return rule; }
		
		//'datatype' name=ID ('extends' superType=[MobaDataType])? (primitive?='isPrimitive'? & array?='isArray'? &
		//((date?='isDate' | time?='isTime' | timestamp?='isTimestamp') ('(' (dateFormatString=STRING |
		//dateFormatConst=[MobaConstant]) ')')?)? & ('constraints' '(' constraints+=MobaConstraint (','
		//constraints+=MobaConstraint)* ')')? & enumAST=MobaEnum?) MobaPropertiesAble?
		public Group getGroup() { return cGroup; }
		
		//'datatype'
		public Keyword getDatatypeKeyword_0() { return cDatatypeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('extends' superType=[MobaDataType])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }
		
		//superType=[MobaDataType]
		public Assignment getSuperTypeAssignment_2_1() { return cSuperTypeAssignment_2_1; }
		
		//[MobaDataType]
		public CrossReference getSuperTypeMobaDataTypeCrossReference_2_1_0() { return cSuperTypeMobaDataTypeCrossReference_2_1_0; }
		
		//ID
		public RuleCall getSuperTypeMobaDataTypeIDTerminalRuleCall_2_1_0_1() { return cSuperTypeMobaDataTypeIDTerminalRuleCall_2_1_0_1; }
		
		//(primitive?='isPrimitive'? & array?='isArray'? & ((date?='isDate' | time?='isTime' | timestamp?='isTimestamp') ('('
		//(dateFormatString=STRING | dateFormatConst=[MobaConstant]) ')')?)? & ('constraints' '(' constraints+=MobaConstraint
		//(',' constraints+=MobaConstraint)* ')')? & enumAST=MobaEnum?)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//primitive?='isPrimitive'?
		public Assignment getPrimitiveAssignment_3_0() { return cPrimitiveAssignment_3_0; }
		
		//'isPrimitive'
		public Keyword getPrimitiveIsPrimitiveKeyword_3_0_0() { return cPrimitiveIsPrimitiveKeyword_3_0_0; }
		
		//array?='isArray'?
		public Assignment getArrayAssignment_3_1() { return cArrayAssignment_3_1; }
		
		//'isArray'
		public Keyword getArrayIsArrayKeyword_3_1_0() { return cArrayIsArrayKeyword_3_1_0; }
		
		//((date?='isDate' | time?='isTime' | timestamp?='isTimestamp') ('(' (dateFormatString=STRING |
		//dateFormatConst=[MobaConstant]) ')')?)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//(date?='isDate' | time?='isTime' | timestamp?='isTimestamp')
		public Alternatives getAlternatives_3_2_0() { return cAlternatives_3_2_0; }
		
		//date?='isDate'
		public Assignment getDateAssignment_3_2_0_0() { return cDateAssignment_3_2_0_0; }
		
		//'isDate'
		public Keyword getDateIsDateKeyword_3_2_0_0_0() { return cDateIsDateKeyword_3_2_0_0_0; }
		
		//time?='isTime'
		public Assignment getTimeAssignment_3_2_0_1() { return cTimeAssignment_3_2_0_1; }
		
		//'isTime'
		public Keyword getTimeIsTimeKeyword_3_2_0_1_0() { return cTimeIsTimeKeyword_3_2_0_1_0; }
		
		//timestamp?='isTimestamp'
		public Assignment getTimestampAssignment_3_2_0_2() { return cTimestampAssignment_3_2_0_2; }
		
		//'isTimestamp'
		public Keyword getTimestampIsTimestampKeyword_3_2_0_2_0() { return cTimestampIsTimestampKeyword_3_2_0_2_0; }
		
		//('(' (dateFormatString=STRING | dateFormatConst=[MobaConstant]) ')')?
		public Group getGroup_3_2_1() { return cGroup_3_2_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_2_1_0() { return cLeftParenthesisKeyword_3_2_1_0; }
		
		//(dateFormatString=STRING | dateFormatConst=[MobaConstant])
		public Alternatives getAlternatives_3_2_1_1() { return cAlternatives_3_2_1_1; }
		
		//dateFormatString=STRING
		public Assignment getDateFormatStringAssignment_3_2_1_1_0() { return cDateFormatStringAssignment_3_2_1_1_0; }
		
		//STRING
		public RuleCall getDateFormatStringSTRINGTerminalRuleCall_3_2_1_1_0_0() { return cDateFormatStringSTRINGTerminalRuleCall_3_2_1_1_0_0; }
		
		//dateFormatConst=[MobaConstant]
		public Assignment getDateFormatConstAssignment_3_2_1_1_1() { return cDateFormatConstAssignment_3_2_1_1_1; }
		
		//[MobaConstant]
		public CrossReference getDateFormatConstMobaConstantCrossReference_3_2_1_1_1_0() { return cDateFormatConstMobaConstantCrossReference_3_2_1_1_1_0; }
		
		//ID
		public RuleCall getDateFormatConstMobaConstantIDTerminalRuleCall_3_2_1_1_1_0_1() { return cDateFormatConstMobaConstantIDTerminalRuleCall_3_2_1_1_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_2_1_2() { return cRightParenthesisKeyword_3_2_1_2; }
		
		//('constraints' '(' constraints+=MobaConstraint (',' constraints+=MobaConstraint)* ')')?
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_3_3_0() { return cConstraintsKeyword_3_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_3_1() { return cLeftParenthesisKeyword_3_3_1; }
		
		//constraints+=MobaConstraint
		public Assignment getConstraintsAssignment_3_3_2() { return cConstraintsAssignment_3_3_2; }
		
		//MobaConstraint
		public RuleCall getConstraintsMobaConstraintParserRuleCall_3_3_2_0() { return cConstraintsMobaConstraintParserRuleCall_3_3_2_0; }
		
		//(',' constraints+=MobaConstraint)*
		public Group getGroup_3_3_3() { return cGroup_3_3_3; }
		
		//','
		public Keyword getCommaKeyword_3_3_3_0() { return cCommaKeyword_3_3_3_0; }
		
		//constraints+=MobaConstraint
		public Assignment getConstraintsAssignment_3_3_3_1() { return cConstraintsAssignment_3_3_3_1; }
		
		//MobaConstraint
		public RuleCall getConstraintsMobaConstraintParserRuleCall_3_3_3_1_0() { return cConstraintsMobaConstraintParserRuleCall_3_3_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_3_4() { return cRightParenthesisKeyword_3_3_4; }
		
		//enumAST=MobaEnum?
		public Assignment getEnumASTAssignment_3_4() { return cEnumASTAssignment_3_4; }
		
		//MobaEnum
		public RuleCall getEnumASTMobaEnumParserRuleCall_3_4_0() { return cEnumASTMobaEnumParserRuleCall_3_4_0; }
		
		//MobaPropertiesAble?
		public RuleCall getMobaPropertiesAbleParserRuleCall_4() { return cMobaPropertiesAbleParserRuleCall_4; }
	}
	public class MobaEnumElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaEnum");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLiteralsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLiteralsMobaEnumLiteralParserRuleCall_3_0 = (RuleCall)cLiteralsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLiteralsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLiteralsMobaEnumLiteralParserRuleCall_4_1_0 = (RuleCall)cLiteralsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MobaEnum:
		//	'enum' name=ID '{'
		//	literals+=MobaEnumLiteral (',' literals+=MobaEnumLiteral)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'enum' name=ID '{' literals+=MobaEnumLiteral (',' literals+=MobaEnumLiteral)* '}'
		public Group getGroup() { return cGroup; }
		
		//'enum'
		public Keyword getEnumKeyword_0() { return cEnumKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//literals+=MobaEnumLiteral
		public Assignment getLiteralsAssignment_3() { return cLiteralsAssignment_3; }
		
		//MobaEnumLiteral
		public RuleCall getLiteralsMobaEnumLiteralParserRuleCall_3_0() { return cLiteralsMobaEnumLiteralParserRuleCall_3_0; }
		
		//(',' literals+=MobaEnumLiteral)*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//literals+=MobaEnumLiteral
		public Assignment getLiteralsAssignment_4_1() { return cLiteralsAssignment_4_1; }
		
		//MobaEnumLiteral
		public RuleCall getLiteralsMobaEnumLiteralParserRuleCall_4_1_0() { return cLiteralsMobaEnumLiteralParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class MobaEnumLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaEnumLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLiteralAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLiteralSTRINGTerminalRuleCall_4_0 = (RuleCall)cLiteralAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cValueAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cValueINTTerminalRuleCall_6_0 = (RuleCall)cValueAssignment_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//MobaEnumLiteral:
		//	'lit' name=ID '=' '(' literal=STRING ',' value=INT ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'lit' name=ID '=' '(' literal=STRING ',' value=INT ')'
		public Group getGroup() { return cGroup; }
		
		//'lit'
		public Keyword getLitKeyword_0() { return cLitKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//literal=STRING
		public Assignment getLiteralAssignment_4() { return cLiteralAssignment_4; }
		
		//STRING
		public RuleCall getLiteralSTRINGTerminalRuleCall_4_0() { return cLiteralSTRINGTerminalRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//value=INT
		public Assignment getValueAssignment_6() { return cValueAssignment_6; }
		
		//INT
		public RuleCall getValueINTTerminalRuleCall_6_0() { return cValueINTTerminalRuleCall_6_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class MobaConstantElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaConstant");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConstKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueASTAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueASTMobaConstantValueParserRuleCall_3_0 = (RuleCall)cValueASTAssignment_3.eContents().get(0);
		private final RuleCall cMobaPropertiesAbleParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//MobaConstant:
		//	'const' name=ID '=' valueAST=MobaConstantValue MobaPropertiesAble?;
		@Override public ParserRule getRule() { return rule; }
		
		//'const' name=ID '=' valueAST=MobaConstantValue MobaPropertiesAble?
		public Group getGroup() { return cGroup; }
		
		//'const'
		public Keyword getConstKeyword_0() { return cConstKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//valueAST=MobaConstantValue
		public Assignment getValueASTAssignment_3() { return cValueASTAssignment_3; }
		
		//MobaConstantValue
		public RuleCall getValueASTMobaConstantValueParserRuleCall_3_0() { return cValueASTMobaConstantValueParserRuleCall_3_0; }
		
		//MobaPropertiesAble?
		public RuleCall getMobaPropertiesAbleParserRuleCall_4() { return cMobaPropertiesAbleParserRuleCall_4; }
	}
	public class MobaConstantValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaConstantValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cValueStringAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cValueStringSTRINGTerminalRuleCall_0_0_0 = (RuleCall)cValueStringAssignment_0_0.eContents().get(0);
		private final Assignment cValueIntAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final RuleCall cValueIntINTTerminalRuleCall_0_1_0 = (RuleCall)cValueIntAssignment_0_1.eContents().get(0);
		private final Assignment cValueDoubleAssignment_0_2 = (Assignment)cAlternatives_0.eContents().get(2);
		private final RuleCall cValueDoubleDOUBLETerminalRuleCall_0_2_0 = (RuleCall)cValueDoubleAssignment_0_2.eContents().get(0);
		private final Assignment cValueConstAssignment_0_3 = (Assignment)cAlternatives_0.eContents().get(3);
		private final CrossReference cValueConstMobaConstantCrossReference_0_3_0 = (CrossReference)cValueConstAssignment_0_3.eContents().get(0);
		private final RuleCall cValueConstMobaConstantIDTerminalRuleCall_0_3_0_1 = (RuleCall)cValueConstMobaConstantCrossReference_0_3_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cPlusSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTailAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTailMobaConstantValueParserRuleCall_1_1_0 = (RuleCall)cTailAssignment_1_1.eContents().get(0);
		
		//MobaConstantValue:
		//	(valueString=STRING | valueInt=INT | valueDouble=DOUBLE | valueConst=[MobaConstant]) ('+' tail=MobaConstantValue)?;
		@Override public ParserRule getRule() { return rule; }
		
		//(valueString=STRING | valueInt=INT | valueDouble=DOUBLE | valueConst=[MobaConstant]) ('+' tail=MobaConstantValue)?
		public Group getGroup() { return cGroup; }
		
		//(valueString=STRING | valueInt=INT | valueDouble=DOUBLE | valueConst=[MobaConstant])
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//valueString=STRING
		public Assignment getValueStringAssignment_0_0() { return cValueStringAssignment_0_0; }
		
		//STRING
		public RuleCall getValueStringSTRINGTerminalRuleCall_0_0_0() { return cValueStringSTRINGTerminalRuleCall_0_0_0; }
		
		//valueInt=INT
		public Assignment getValueIntAssignment_0_1() { return cValueIntAssignment_0_1; }
		
		//INT
		public RuleCall getValueIntINTTerminalRuleCall_0_1_0() { return cValueIntINTTerminalRuleCall_0_1_0; }
		
		//valueDouble=DOUBLE
		public Assignment getValueDoubleAssignment_0_2() { return cValueDoubleAssignment_0_2; }
		
		//DOUBLE
		public RuleCall getValueDoubleDOUBLETerminalRuleCall_0_2_0() { return cValueDoubleDOUBLETerminalRuleCall_0_2_0; }
		
		//valueConst=[MobaConstant]
		public Assignment getValueConstAssignment_0_3() { return cValueConstAssignment_0_3; }
		
		//[MobaConstant]
		public CrossReference getValueConstMobaConstantCrossReference_0_3_0() { return cValueConstMobaConstantCrossReference_0_3_0; }
		
		//ID
		public RuleCall getValueConstMobaConstantIDTerminalRuleCall_0_3_0_1() { return cValueConstMobaConstantIDTerminalRuleCall_0_3_0_1; }
		
		//('+' tail=MobaConstantValue)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'+'
		public Keyword getPlusSignKeyword_1_0() { return cPlusSignKeyword_1_0; }
		
		//tail=MobaConstantValue
		public Assignment getTailAssignment_1_1() { return cTailAssignment_1_1; }
		
		//MobaConstantValue
		public RuleCall getTailMobaConstantValueParserRuleCall_1_1_0() { return cTailMobaConstantValueParserRuleCall_1_1_0; }
	}
	public class MobaPropertiesAbleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaPropertiesAble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPropertiesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPropertiesMobaPropertyParserRuleCall_1_0 = (RuleCall)cPropertiesAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPropertiesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPropertiesMobaPropertyParserRuleCall_2_1_0 = (RuleCall)cPropertiesAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//fragment MobaPropertiesAble:
		//	'[' properties+=MobaProperty (',' properties+=MobaProperty)* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'[' properties+=MobaProperty (',' properties+=MobaProperty)* ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//properties+=MobaProperty
		public Assignment getPropertiesAssignment_1() { return cPropertiesAssignment_1; }
		
		//MobaProperty
		public RuleCall getPropertiesMobaPropertyParserRuleCall_1_0() { return cPropertiesMobaPropertyParserRuleCall_1_0; }
		
		//(',' properties+=MobaProperty)*
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//properties+=MobaProperty
		public Assignment getPropertiesAssignment_2_1() { return cPropertiesAssignment_2_1; }
		
		//MobaProperty
		public RuleCall getPropertiesMobaPropertyParserRuleCall_2_1_0() { return cPropertiesMobaPropertyParserRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class MobaPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cKeyStringAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cKeyStringSTRINGTerminalRuleCall_0_0_0 = (RuleCall)cKeyStringAssignment_0_0.eContents().get(0);
		private final Assignment cKeyConstAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final CrossReference cKeyConstMobaConstantCrossReference_0_1_0 = (CrossReference)cKeyConstAssignment_0_1.eContents().get(0);
		private final RuleCall cKeyConstMobaConstantIDTerminalRuleCall_0_1_0_1 = (RuleCall)cKeyConstMobaConstantCrossReference_0_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cValueStringAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cValueStringSTRINGTerminalRuleCall_2_0_0 = (RuleCall)cValueStringAssignment_2_0.eContents().get(0);
		private final Assignment cValueConstAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final CrossReference cValueConstMobaConstantCrossReference_2_1_0 = (CrossReference)cValueConstAssignment_2_1.eContents().get(0);
		private final RuleCall cValueConstMobaConstantIDTerminalRuleCall_2_1_0_1 = (RuleCall)cValueConstMobaConstantCrossReference_2_1_0.eContents().get(1);
		
		//MobaProperty:
		//	(keyString=STRING | keyConst=[MobaConstant]) '=' (valueString=STRING | valueConst=[MobaConstant]);
		@Override public ParserRule getRule() { return rule; }
		
		//(keyString=STRING | keyConst=[MobaConstant]) '=' (valueString=STRING | valueConst=[MobaConstant])
		public Group getGroup() { return cGroup; }
		
		//(keyString=STRING | keyConst=[MobaConstant])
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//keyString=STRING
		public Assignment getKeyStringAssignment_0_0() { return cKeyStringAssignment_0_0; }
		
		//STRING
		public RuleCall getKeyStringSTRINGTerminalRuleCall_0_0_0() { return cKeyStringSTRINGTerminalRuleCall_0_0_0; }
		
		//keyConst=[MobaConstant]
		public Assignment getKeyConstAssignment_0_1() { return cKeyConstAssignment_0_1; }
		
		//[MobaConstant]
		public CrossReference getKeyConstMobaConstantCrossReference_0_1_0() { return cKeyConstMobaConstantCrossReference_0_1_0; }
		
		//ID
		public RuleCall getKeyConstMobaConstantIDTerminalRuleCall_0_1_0_1() { return cKeyConstMobaConstantIDTerminalRuleCall_0_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//(valueString=STRING | valueConst=[MobaConstant])
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//valueString=STRING
		public Assignment getValueStringAssignment_2_0() { return cValueStringAssignment_2_0; }
		
		//STRING
		public RuleCall getValueStringSTRINGTerminalRuleCall_2_0_0() { return cValueStringSTRINGTerminalRuleCall_2_0_0; }
		
		//valueConst=[MobaConstant]
		public Assignment getValueConstAssignment_2_1() { return cValueConstAssignment_2_1; }
		
		//[MobaConstant]
		public CrossReference getValueConstMobaConstantCrossReference_2_1_0() { return cValueConstMobaConstantCrossReference_2_1_0; }
		
		//ID
		public RuleCall getValueConstMobaConstantIDTerminalRuleCall_2_1_0_1() { return cValueConstMobaConstantIDTerminalRuleCall_2_1_0_1; }
	}
	public class MobaDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaData");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMobaBeanParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMobaPayloadParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMobaQueueParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//MobaData:
		//	MobaBean | MobaPayload | MobaQueue;
		@Override public ParserRule getRule() { return rule; }
		
		//MobaBean | MobaPayload | MobaQueue
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MobaBean
		public RuleCall getMobaBeanParserRuleCall_0() { return cMobaBeanParserRuleCall_0; }
		
		//MobaPayload
		public RuleCall getMobaPayloadParserRuleCall_1() { return cMobaPayloadParserRuleCall_1; }
		
		//MobaQueue
		public RuleCall getMobaQueueParserRuleCall_2() { return cMobaQueueParserRuleCall_2; }
	}
	public class MobaSettingsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaSettings");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMobaSettingsAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cActiveAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cActiveActiveKeyword_1_0 = (Keyword)cActiveAssignment_1.eContents().get(0);
		private final Keyword cSettingsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExtendsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSuperTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSuperTypeMobaSettingsCrossReference_4_1_0 = (CrossReference)cSuperTypeAssignment_4_1.eContents().get(0);
		private final RuleCall cSuperTypeMobaSettingsIDTerminalRuleCall_4_1_0_1 = (RuleCall)cSuperTypeMobaSettingsCrossReference_4_1_0.eContents().get(1);
		private final RuleCall cMobaPropertiesAbleParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cFeaturesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cFeaturesMobaSettingsFeatureParserRuleCall_7_0 = (RuleCall)cFeaturesAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//MobaSettings:
		//	{MobaSettings} active?='active'? 'settings' name=ID ('extends' superType=[MobaSettings])? MobaPropertiesAble? '{'
		//	features+=MobaSettingsFeature*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{MobaSettings} active?='active'? 'settings' name=ID ('extends' superType=[MobaSettings])? MobaPropertiesAble? '{'
		//features+=MobaSettingsFeature* '}'
		public Group getGroup() { return cGroup; }
		
		//{MobaSettings}
		public Action getMobaSettingsAction_0() { return cMobaSettingsAction_0; }
		
		//active?='active'?
		public Assignment getActiveAssignment_1() { return cActiveAssignment_1; }
		
		//'active'
		public Keyword getActiveActiveKeyword_1_0() { return cActiveActiveKeyword_1_0; }
		
		//'settings'
		public Keyword getSettingsKeyword_2() { return cSettingsKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//('extends' superType=[MobaSettings])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'extends'
		public Keyword getExtendsKeyword_4_0() { return cExtendsKeyword_4_0; }
		
		//superType=[MobaSettings]
		public Assignment getSuperTypeAssignment_4_1() { return cSuperTypeAssignment_4_1; }
		
		//[MobaSettings]
		public CrossReference getSuperTypeMobaSettingsCrossReference_4_1_0() { return cSuperTypeMobaSettingsCrossReference_4_1_0; }
		
		//ID
		public RuleCall getSuperTypeMobaSettingsIDTerminalRuleCall_4_1_0_1() { return cSuperTypeMobaSettingsIDTerminalRuleCall_4_1_0_1; }
		
		//MobaPropertiesAble?
		public RuleCall getMobaPropertiesAbleParserRuleCall_5() { return cMobaPropertiesAbleParserRuleCall_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//features+=MobaSettingsFeature*
		public Assignment getFeaturesAssignment_7() { return cFeaturesAssignment_7; }
		
		//MobaSettingsFeature
		public RuleCall getFeaturesMobaSettingsFeatureParserRuleCall_7_0() { return cFeaturesMobaSettingsFeatureParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class MobaCacheElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaCache");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMobaCacheAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCacheKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_1 = (UnorderedGroup)cGroup_2.eContents().get(1);
		private final Group cGroup_2_1_0 = (Group)cUnorderedGroup_2_1.eContents().get(0);
		private final Keyword cTypeKeyword_2_1_0_0 = (Keyword)cGroup_2_1_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1_0_1 = (Keyword)cGroup_2_1_0.eContents().get(1);
		private final Alternatives cAlternatives_2_1_0_2 = (Alternatives)cGroup_2_1_0.eContents().get(2);
		private final Assignment cCacheTypeStringAssignment_2_1_0_2_0 = (Assignment)cAlternatives_2_1_0_2.eContents().get(0);
		private final RuleCall cCacheTypeStringSTRINGTerminalRuleCall_2_1_0_2_0_0 = (RuleCall)cCacheTypeStringAssignment_2_1_0_2_0.eContents().get(0);
		private final Assignment cCacheTypeConstAssignment_2_1_0_2_1 = (Assignment)cAlternatives_2_1_0_2.eContents().get(1);
		private final CrossReference cCacheTypeConstMobaConstantCrossReference_2_1_0_2_1_0 = (CrossReference)cCacheTypeConstAssignment_2_1_0_2_1.eContents().get(0);
		private final RuleCall cCacheTypeConstMobaConstantIDTerminalRuleCall_2_1_0_2_1_0_1 = (RuleCall)cCacheTypeConstMobaConstantCrossReference_2_1_0_2_1_0.eContents().get(1);
		private final Group cGroup_2_1_1 = (Group)cUnorderedGroup_2_1.eContents().get(1);
		private final Keyword cStrategyKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1_1_1 = (Keyword)cGroup_2_1_1.eContents().get(1);
		private final Alternatives cAlternatives_2_1_1_2 = (Alternatives)cGroup_2_1_1.eContents().get(2);
		private final Assignment cCacheStrategyStringAssignment_2_1_1_2_0 = (Assignment)cAlternatives_2_1_1_2.eContents().get(0);
		private final RuleCall cCacheStrategyStringSTRINGTerminalRuleCall_2_1_1_2_0_0 = (RuleCall)cCacheStrategyStringAssignment_2_1_1_2_0.eContents().get(0);
		private final Assignment cCacheStrategyConstAssignment_2_1_1_2_1 = (Assignment)cAlternatives_2_1_1_2.eContents().get(1);
		private final CrossReference cCacheStrategyConstMobaConstantCrossReference_2_1_1_2_1_0 = (CrossReference)cCacheStrategyConstAssignment_2_1_1_2_1.eContents().get(0);
		private final RuleCall cCacheStrategyConstMobaConstantIDTerminalRuleCall_2_1_1_2_1_0_1 = (RuleCall)cCacheStrategyConstMobaConstantCrossReference_2_1_1_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//MobaCache:
		//	{MobaCache}
		//	'cache' ('(' (('type' '=' (cacheTypeString=STRING | cacheTypeConst=[MobaConstant]))?
		//	// strategy
		//	& ('strategy' '=' (cacheStrategyString=STRING | cacheStrategyConst=[MobaConstant]))?) ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{MobaCache} 'cache' ('(' (('type' '=' (cacheTypeString=STRING | cacheTypeConst=[MobaConstant]))? // strategy
		//& ('strategy' '=' (cacheStrategyString=STRING | cacheStrategyConst=[MobaConstant]))?) ')')?
		public Group getGroup() { return cGroup; }
		
		//{MobaCache}
		public Action getMobaCacheAction_0() { return cMobaCacheAction_0; }
		
		//'cache'
		public Keyword getCacheKeyword_1() { return cCacheKeyword_1; }
		
		//('(' (('type' '=' (cacheTypeString=STRING | cacheTypeConst=[MobaConstant]))? // strategy
		//& ('strategy' '=' (cacheStrategyString=STRING | cacheStrategyConst=[MobaConstant]))?) ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//(('type' '=' (cacheTypeString=STRING | cacheTypeConst=[MobaConstant]))? // strategy
		//& ('strategy' '=' (cacheStrategyString=STRING | cacheStrategyConst=[MobaConstant]))?)
		public UnorderedGroup getUnorderedGroup_2_1() { return cUnorderedGroup_2_1; }
		
		//('type' '=' (cacheTypeString=STRING | cacheTypeConst=[MobaConstant]))?
		public Group getGroup_2_1_0() { return cGroup_2_1_0; }
		
		//'type'
		public Keyword getTypeKeyword_2_1_0_0() { return cTypeKeyword_2_1_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_1_0_1() { return cEqualsSignKeyword_2_1_0_1; }
		
		//(cacheTypeString=STRING | cacheTypeConst=[MobaConstant])
		public Alternatives getAlternatives_2_1_0_2() { return cAlternatives_2_1_0_2; }
		
		//cacheTypeString=STRING
		public Assignment getCacheTypeStringAssignment_2_1_0_2_0() { return cCacheTypeStringAssignment_2_1_0_2_0; }
		
		//STRING
		public RuleCall getCacheTypeStringSTRINGTerminalRuleCall_2_1_0_2_0_0() { return cCacheTypeStringSTRINGTerminalRuleCall_2_1_0_2_0_0; }
		
		//cacheTypeConst=[MobaConstant]
		public Assignment getCacheTypeConstAssignment_2_1_0_2_1() { return cCacheTypeConstAssignment_2_1_0_2_1; }
		
		//[MobaConstant]
		public CrossReference getCacheTypeConstMobaConstantCrossReference_2_1_0_2_1_0() { return cCacheTypeConstMobaConstantCrossReference_2_1_0_2_1_0; }
		
		//ID
		public RuleCall getCacheTypeConstMobaConstantIDTerminalRuleCall_2_1_0_2_1_0_1() { return cCacheTypeConstMobaConstantIDTerminalRuleCall_2_1_0_2_1_0_1; }
		
		//('strategy' '=' (cacheStrategyString=STRING | cacheStrategyConst=[MobaConstant]))?
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }
		
		//'strategy'
		public Keyword getStrategyKeyword_2_1_1_0() { return cStrategyKeyword_2_1_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_1_1_1() { return cEqualsSignKeyword_2_1_1_1; }
		
		//(cacheStrategyString=STRING | cacheStrategyConst=[MobaConstant])
		public Alternatives getAlternatives_2_1_1_2() { return cAlternatives_2_1_1_2; }
		
		//cacheStrategyString=STRING
		public Assignment getCacheStrategyStringAssignment_2_1_1_2_0() { return cCacheStrategyStringAssignment_2_1_1_2_0; }
		
		//STRING
		public RuleCall getCacheStrategyStringSTRINGTerminalRuleCall_2_1_1_2_0_0() { return cCacheStrategyStringSTRINGTerminalRuleCall_2_1_1_2_0_0; }
		
		//cacheStrategyConst=[MobaConstant]
		public Assignment getCacheStrategyConstAssignment_2_1_1_2_1() { return cCacheStrategyConstAssignment_2_1_1_2_1; }
		
		//[MobaConstant]
		public CrossReference getCacheStrategyConstMobaConstantCrossReference_2_1_1_2_1_0() { return cCacheStrategyConstMobaConstantCrossReference_2_1_1_2_1_0; }
		
		//ID
		public RuleCall getCacheStrategyConstMobaConstantIDTerminalRuleCall_2_1_1_2_1_0_1() { return cCacheStrategyConstMobaConstantIDTerminalRuleCall_2_1_1_2_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }
	}
	public class MobaBeanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaBean");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBeanKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cExtendsKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cSuperTypeAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final CrossReference cSuperTypeMobaBeanCrossReference_2_0_1_0 = (CrossReference)cSuperTypeAssignment_2_0_1.eContents().get(0);
		private final RuleCall cSuperTypeMobaBeanIDTerminalRuleCall_2_0_1_0_1 = (RuleCall)cSuperTypeMobaBeanCrossReference_2_0_1_0.eContents().get(1);
		private final Assignment cCacheAssignment_2_1 = (Assignment)cUnorderedGroup_2.eContents().get(1);
		private final RuleCall cCacheMobaCacheParserRuleCall_2_1_0 = (RuleCall)cCacheAssignment_2_1.eContents().get(0);
		private final RuleCall cMobaPropertiesAbleParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFeaturesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFeaturesMobaBeanFeatureParserRuleCall_5_0 = (RuleCall)cFeaturesAssignment_5.eContents().get(0);
		private final Assignment cIndexAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cIndexMobaBeanIndexParserRuleCall_6_0 = (RuleCall)cIndexAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//MobaBean:
		//	'bean' name=ID (('extends' superType=[MobaBean])? & cache=MobaCache?) MobaPropertiesAble? '{'
		//	features+=MobaBeanFeature*
		//	index=MobaBeanIndex?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'bean' name=ID (('extends' superType=[MobaBean])? & cache=MobaCache?) MobaPropertiesAble? '{' features+=MobaBeanFeature*
		//index=MobaBeanIndex? '}'
		public Group getGroup() { return cGroup; }
		
		//'bean'
		public Keyword getBeanKeyword_0() { return cBeanKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(('extends' superType=[MobaBean])? & cache=MobaCache?)
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('extends' superType=[MobaBean])?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_0_0() { return cExtendsKeyword_2_0_0; }
		
		//superType=[MobaBean]
		public Assignment getSuperTypeAssignment_2_0_1() { return cSuperTypeAssignment_2_0_1; }
		
		//[MobaBean]
		public CrossReference getSuperTypeMobaBeanCrossReference_2_0_1_0() { return cSuperTypeMobaBeanCrossReference_2_0_1_0; }
		
		//ID
		public RuleCall getSuperTypeMobaBeanIDTerminalRuleCall_2_0_1_0_1() { return cSuperTypeMobaBeanIDTerminalRuleCall_2_0_1_0_1; }
		
		//cache=MobaCache?
		public Assignment getCacheAssignment_2_1() { return cCacheAssignment_2_1; }
		
		//MobaCache
		public RuleCall getCacheMobaCacheParserRuleCall_2_1_0() { return cCacheMobaCacheParserRuleCall_2_1_0; }
		
		//MobaPropertiesAble?
		public RuleCall getMobaPropertiesAbleParserRuleCall_3() { return cMobaPropertiesAbleParserRuleCall_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//features+=MobaBeanFeature*
		public Assignment getFeaturesAssignment_5() { return cFeaturesAssignment_5; }
		
		//MobaBeanFeature
		public RuleCall getFeaturesMobaBeanFeatureParserRuleCall_5_0() { return cFeaturesMobaBeanFeatureParserRuleCall_5_0; }
		
		//index=MobaBeanIndex?
		public Assignment getIndexAssignment_6() { return cIndexAssignment_6; }
		
		//MobaBeanIndex
		public RuleCall getIndexMobaBeanIndexParserRuleCall_6_0() { return cIndexMobaBeanIndexParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class MobaBeanIndexElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaBeanIndex");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIndexKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAttributesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAttributesMobaBeanAttributeCrossReference_1_0 = (CrossReference)cAttributesAssignment_1.eContents().get(0);
		private final RuleCall cAttributesMobaBeanAttributeIDTerminalRuleCall_1_0_1 = (RuleCall)cAttributesMobaBeanAttributeCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAttributesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cAttributesMobaBeanAttributeCrossReference_2_1_0 = (CrossReference)cAttributesAssignment_2_1.eContents().get(0);
		private final RuleCall cAttributesMobaBeanAttributeIDTerminalRuleCall_2_1_0_1 = (RuleCall)cAttributesMobaBeanAttributeCrossReference_2_1_0.eContents().get(1);
		
		//MobaBeanIndex:
		//	'index' attributes+=[MobaBeanAttribute] (',' attributes+=[MobaBeanAttribute]*);
		@Override public ParserRule getRule() { return rule; }
		
		//'index' attributes+=[MobaBeanAttribute] (',' attributes+=[MobaBeanAttribute]*)
		public Group getGroup() { return cGroup; }
		
		//'index'
		public Keyword getIndexKeyword_0() { return cIndexKeyword_0; }
		
		//attributes+=[MobaBeanAttribute]
		public Assignment getAttributesAssignment_1() { return cAttributesAssignment_1; }
		
		//[MobaBeanAttribute]
		public CrossReference getAttributesMobaBeanAttributeCrossReference_1_0() { return cAttributesMobaBeanAttributeCrossReference_1_0; }
		
		//ID
		public RuleCall getAttributesMobaBeanAttributeIDTerminalRuleCall_1_0_1() { return cAttributesMobaBeanAttributeIDTerminalRuleCall_1_0_1; }
		
		//(',' attributes+=[MobaBeanAttribute]*)
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//attributes+=[MobaBeanAttribute]*
		public Assignment getAttributesAssignment_2_1() { return cAttributesAssignment_2_1; }
		
		//[MobaBeanAttribute]
		public CrossReference getAttributesMobaBeanAttributeCrossReference_2_1_0() { return cAttributesMobaBeanAttributeCrossReference_2_1_0; }
		
		//ID
		public RuleCall getAttributesMobaBeanAttributeIDTerminalRuleCall_2_1_0_1() { return cAttributesMobaBeanAttributeIDTerminalRuleCall_2_1_0_1; }
	}
	public class MobaPayloadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaPayload");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPayloadKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperTypeMobaPayloadCrossReference_2_1_0 = (CrossReference)cSuperTypeAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperTypeMobaPayloadIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSuperTypeMobaPayloadCrossReference_2_1_0.eContents().get(1);
		private final RuleCall cMobaPropertiesAbleParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFeaturesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFeaturesMobaPayloadFeatureParserRuleCall_5_0 = (RuleCall)cFeaturesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//MobaPayload:
		//	'payload' name=ID ('extends' superType=[MobaPayload])? MobaPropertiesAble? '{'
		//	features+=MobaPayloadFeature*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'payload' name=ID ('extends' superType=[MobaPayload])? MobaPropertiesAble? '{' features+=MobaPayloadFeature* '}'
		public Group getGroup() { return cGroup; }
		
		//'payload'
		public Keyword getPayloadKeyword_0() { return cPayloadKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('extends' superType=[MobaPayload])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }
		
		//superType=[MobaPayload]
		public Assignment getSuperTypeAssignment_2_1() { return cSuperTypeAssignment_2_1; }
		
		//[MobaPayload]
		public CrossReference getSuperTypeMobaPayloadCrossReference_2_1_0() { return cSuperTypeMobaPayloadCrossReference_2_1_0; }
		
		//ID
		public RuleCall getSuperTypeMobaPayloadIDTerminalRuleCall_2_1_0_1() { return cSuperTypeMobaPayloadIDTerminalRuleCall_2_1_0_1; }
		
		//MobaPropertiesAble?
		public RuleCall getMobaPropertiesAbleParserRuleCall_3() { return cMobaPropertiesAbleParserRuleCall_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//features+=MobaPayloadFeature*
		public Assignment getFeaturesAssignment_5() { return cFeaturesAssignment_5; }
		
		//MobaPayloadFeature
		public RuleCall getFeaturesMobaPayloadFeatureParserRuleCall_5_0() { return cFeaturesMobaPayloadFeatureParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class MobaQueueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaQueue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQueueKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperTypeMobaQueueCrossReference_2_1_0 = (CrossReference)cSuperTypeAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperTypeMobaQueueIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSuperTypeMobaQueueCrossReference_2_1_0.eContents().get(1);
		private final RuleCall cMobaPropertiesAbleParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFeaturesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFeaturesMobaQueueFeatureParserRuleCall_5_0 = (RuleCall)cFeaturesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//MobaQueue:
		//	'queue' name=ID ('extends' superType=[MobaQueue])? MobaPropertiesAble? '{'
		//	features+=MobaQueueFeature*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'queue' name=ID ('extends' superType=[MobaQueue])? MobaPropertiesAble? '{' features+=MobaQueueFeature* '}'
		public Group getGroup() { return cGroup; }
		
		//'queue'
		public Keyword getQueueKeyword_0() { return cQueueKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('extends' superType=[MobaQueue])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }
		
		//superType=[MobaQueue]
		public Assignment getSuperTypeAssignment_2_1() { return cSuperTypeAssignment_2_1; }
		
		//[MobaQueue]
		public CrossReference getSuperTypeMobaQueueCrossReference_2_1_0() { return cSuperTypeMobaQueueCrossReference_2_1_0; }
		
		//ID
		public RuleCall getSuperTypeMobaQueueIDTerminalRuleCall_2_1_0_1() { return cSuperTypeMobaQueueIDTerminalRuleCall_2_1_0_1; }
		
		//MobaPropertiesAble?
		public RuleCall getMobaPropertiesAbleParserRuleCall_3() { return cMobaPropertiesAbleParserRuleCall_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//features+=MobaQueueFeature*
		public Assignment getFeaturesAssignment_5() { return cFeaturesAssignment_5; }
		
		//MobaQueueFeature
		public RuleCall getFeaturesMobaQueueFeatureParserRuleCall_5_0() { return cFeaturesMobaQueueFeatureParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class MobaServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaService");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMobaRestCustomParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMobaRestCrudParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MobaService:
		//	MobaRestCustom | MobaRestCrud;
		@Override public ParserRule getRule() { return rule; }
		
		//MobaRestCustom | MobaRestCrud
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MobaRestCustom
		public RuleCall getMobaRestCustomParserRuleCall_0() { return cMobaRestCustomParserRuleCall_0; }
		
		//MobaRestCrud
		public RuleCall getMobaRestCrudParserRuleCall_1() { return cMobaRestCrudParserRuleCall_1; }
	}
	public class MobaRestCustomElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaRestCustom");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRestKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final RuleCall cMobaPropertiesAbleParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MobaRestCustom:
		//	'rest' name=ID MobaPropertiesAble?;
		@Override public ParserRule getRule() { return rule; }
		
		//'rest' name=ID MobaPropertiesAble?
		public Group getGroup() { return cGroup; }
		
		//'rest'
		public Keyword getRestKeyword_0() { return cRestKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//MobaPropertiesAble?
		public RuleCall getMobaPropertiesAbleParserRuleCall_2() { return cMobaPropertiesAbleParserRuleCall_2; }
	}
	public class MobaRestCrudElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaRestCrud");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRestCrudKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final RuleCall cMobaPropertiesAbleParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MobaRestCrud:
		//	'restCrud' name=ID MobaPropertiesAble?;
		@Override public ParserRule getRule() { return rule; }
		
		//'restCrud' name=ID MobaPropertiesAble?
		public Group getGroup() { return cGroup; }
		
		//'restCrud'
		public Keyword getRestCrudKeyword_0() { return cRestCrudKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//MobaPropertiesAble?
		public RuleCall getMobaPropertiesAbleParserRuleCall_2() { return cMobaPropertiesAbleParserRuleCall_2; }
	}
	public class MobaBeanFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaBeanFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMobaBeanAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMobaBeanReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MobaBeanFeature:
		//	MobaBeanAttribute | MobaBeanReference;
		@Override public ParserRule getRule() { return rule; }
		
		//MobaBeanAttribute | MobaBeanReference
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MobaBeanAttribute
		public RuleCall getMobaBeanAttributeParserRuleCall_0() { return cMobaBeanAttributeParserRuleCall_0; }
		
		//MobaBeanReference
		public RuleCall getMobaBeanReferenceParserRuleCall_1() { return cMobaBeanReferenceParserRuleCall_1; }
	}
	public class MobaBeanAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaBeanAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cLazyAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cLazyLazyKeyword_1_0_0 = (Keyword)cLazyAssignment_1_0.eContents().get(0);
		private final Assignment cTransientAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cTransientTransientKeyword_1_1_0 = (Keyword)cTransientAssignment_1_1.eContents().get(0);
		private final Assignment cDomainKeyAssignment_1_2 = (Assignment)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cDomainKeyDomainKeyKeyword_1_2_0 = (Keyword)cDomainKeyAssignment_1_2.eContents().get(0);
		private final Assignment cDomainDescriptionAssignment_1_3 = (Assignment)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cDomainDescriptionDomainDescriptionKeyword_1_3_0 = (Keyword)cDomainDescriptionAssignment_1_3.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cUnorderedGroup_1.eContents().get(4);
		private final Keyword cConstraintsKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_4_1 = (Keyword)cGroup_1_4.eContents().get(1);
		private final Assignment cConstraintsAssignment_1_4_2 = (Assignment)cGroup_1_4.eContents().get(2);
		private final RuleCall cConstraintsMobaConstraintParserRuleCall_1_4_2_0 = (RuleCall)cConstraintsAssignment_1_4_2.eContents().get(0);
		private final Group cGroup_1_4_3 = (Group)cGroup_1_4.eContents().get(3);
		private final Keyword cCommaKeyword_1_4_3_0 = (Keyword)cGroup_1_4_3.eContents().get(0);
		private final Assignment cConstraintsAssignment_1_4_3_1 = (Assignment)cGroup_1_4_3.eContents().get(1);
		private final RuleCall cConstraintsMobaConstraintParserRuleCall_1_4_3_1_0 = (RuleCall)cConstraintsAssignment_1_4_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_4_4 = (Keyword)cGroup_1_4.eContents().get(4);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeMobaDataTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeMobaDataTypeIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeMobaDataTypeCrossReference_2_0.eContents().get(1);
		private final RuleCall cMobaMultiplicityAbleParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cMobaPropertiesAbleParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//MobaBeanAttribute:
		//	'var' (lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? &
		//	('constraints' '(' constraints+=MobaConstraint (','
		//	constraints+=MobaConstraint)* ')')?) type=[MobaDataType] MobaMultiplicityAble name=ID MobaPropertiesAble?;
		@Override public ParserRule getRule() { return rule; }
		
		//'var' (lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? &
		//('constraints' '(' constraints+=MobaConstraint (',' constraints+=MobaConstraint)* ')')?) type=[MobaDataType]
		//MobaMultiplicityAble name=ID MobaPropertiesAble?
		public Group getGroup() { return cGroup; }
		
		//'var'
		public Keyword getVarKeyword_0() { return cVarKeyword_0; }
		
		//(lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? &
		//('constraints' '(' constraints+=MobaConstraint (',' constraints+=MobaConstraint)* ')')?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//lazy?='lazy'?
		public Assignment getLazyAssignment_1_0() { return cLazyAssignment_1_0; }
		
		//'lazy'
		public Keyword getLazyLazyKeyword_1_0_0() { return cLazyLazyKeyword_1_0_0; }
		
		//transient?='transient'?
		public Assignment getTransientAssignment_1_1() { return cTransientAssignment_1_1; }
		
		//'transient'
		public Keyword getTransientTransientKeyword_1_1_0() { return cTransientTransientKeyword_1_1_0; }
		
		//domainKey?='domainKey'?
		public Assignment getDomainKeyAssignment_1_2() { return cDomainKeyAssignment_1_2; }
		
		//'domainKey'
		public Keyword getDomainKeyDomainKeyKeyword_1_2_0() { return cDomainKeyDomainKeyKeyword_1_2_0; }
		
		//domainDescription?='domainDescription'?
		public Assignment getDomainDescriptionAssignment_1_3() { return cDomainDescriptionAssignment_1_3; }
		
		//'domainDescription'
		public Keyword getDomainDescriptionDomainDescriptionKeyword_1_3_0() { return cDomainDescriptionDomainDescriptionKeyword_1_3_0; }
		
		//('constraints' '(' constraints+=MobaConstraint (',' constraints+=MobaConstraint)* ')')?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_1_4_0() { return cConstraintsKeyword_1_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_4_1() { return cLeftParenthesisKeyword_1_4_1; }
		
		//constraints+=MobaConstraint
		public Assignment getConstraintsAssignment_1_4_2() { return cConstraintsAssignment_1_4_2; }
		
		//MobaConstraint
		public RuleCall getConstraintsMobaConstraintParserRuleCall_1_4_2_0() { return cConstraintsMobaConstraintParserRuleCall_1_4_2_0; }
		
		//(',' constraints+=MobaConstraint)*
		public Group getGroup_1_4_3() { return cGroup_1_4_3; }
		
		//','
		public Keyword getCommaKeyword_1_4_3_0() { return cCommaKeyword_1_4_3_0; }
		
		//constraints+=MobaConstraint
		public Assignment getConstraintsAssignment_1_4_3_1() { return cConstraintsAssignment_1_4_3_1; }
		
		//MobaConstraint
		public RuleCall getConstraintsMobaConstraintParserRuleCall_1_4_3_1_0() { return cConstraintsMobaConstraintParserRuleCall_1_4_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_4_4() { return cRightParenthesisKeyword_1_4_4; }
		
		//type=[MobaDataType]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[MobaDataType]
		public CrossReference getTypeMobaDataTypeCrossReference_2_0() { return cTypeMobaDataTypeCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeMobaDataTypeIDTerminalRuleCall_2_0_1() { return cTypeMobaDataTypeIDTerminalRuleCall_2_0_1; }
		
		//MobaMultiplicityAble
		public RuleCall getMobaMultiplicityAbleParserRuleCall_3() { return cMobaMultiplicityAbleParserRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//MobaPropertiesAble?
		public RuleCall getMobaPropertiesAbleParserRuleCall_5() { return cMobaPropertiesAbleParserRuleCall_5; }
	}
	public class MobaSettingsFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaSettingsFeature");
		private final RuleCall cMobaSettingsAttributeParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//MobaSettingsFeature:
		//	MobaSettingsAttribute;
		@Override public ParserRule getRule() { return rule; }
		
		//MobaSettingsAttribute
		public RuleCall getMobaSettingsAttributeParserRuleCall() { return cMobaSettingsAttributeParserRuleCall; }
	}
	public class MobaSettingsAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaSettingsAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cLazyAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cLazyLazyKeyword_1_0_0 = (Keyword)cLazyAssignment_1_0.eContents().get(0);
		private final Assignment cTransientAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cTransientTransientKeyword_1_1_0 = (Keyword)cTransientAssignment_1_1.eContents().get(0);
		private final Assignment cDomainKeyAssignment_1_2 = (Assignment)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cDomainKeyDomainKeyKeyword_1_2_0 = (Keyword)cDomainKeyAssignment_1_2.eContents().get(0);
		private final Assignment cDomainDescriptionAssignment_1_3 = (Assignment)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cDomainDescriptionDomainDescriptionKeyword_1_3_0 = (Keyword)cDomainDescriptionAssignment_1_3.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cUnorderedGroup_1.eContents().get(4);
		private final Keyword cConstraintsKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_4_1 = (Keyword)cGroup_1_4.eContents().get(1);
		private final Assignment cConstraintsAssignment_1_4_2 = (Assignment)cGroup_1_4.eContents().get(2);
		private final RuleCall cConstraintsMobaConstraintParserRuleCall_1_4_2_0 = (RuleCall)cConstraintsAssignment_1_4_2.eContents().get(0);
		private final Group cGroup_1_4_3 = (Group)cGroup_1_4.eContents().get(3);
		private final Keyword cCommaKeyword_1_4_3_0 = (Keyword)cGroup_1_4_3.eContents().get(0);
		private final Assignment cConstraintsAssignment_1_4_3_1 = (Assignment)cGroup_1_4_3.eContents().get(1);
		private final RuleCall cConstraintsMobaConstraintParserRuleCall_1_4_3_1_0 = (RuleCall)cConstraintsAssignment_1_4_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_4_4 = (Keyword)cGroup_1_4.eContents().get(4);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeMobaDataTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeMobaDataTypeIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeMobaDataTypeCrossReference_2_0.eContents().get(1);
		private final RuleCall cMobaMultiplicityAbleParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cMobaPropertiesAbleParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//MobaSettingsAttribute:
		//	'var' (lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? &
		//	('constraints' '(' constraints+=MobaConstraint (','
		//	constraints+=MobaConstraint)* ')')?) type=[MobaDataType] MobaMultiplicityAble name=ID MobaPropertiesAble?;
		@Override public ParserRule getRule() { return rule; }
		
		//'var' (lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? &
		//('constraints' '(' constraints+=MobaConstraint (',' constraints+=MobaConstraint)* ')')?) type=[MobaDataType]
		//MobaMultiplicityAble name=ID MobaPropertiesAble?
		public Group getGroup() { return cGroup; }
		
		//'var'
		public Keyword getVarKeyword_0() { return cVarKeyword_0; }
		
		//(lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? &
		//('constraints' '(' constraints+=MobaConstraint (',' constraints+=MobaConstraint)* ')')?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//lazy?='lazy'?
		public Assignment getLazyAssignment_1_0() { return cLazyAssignment_1_0; }
		
		//'lazy'
		public Keyword getLazyLazyKeyword_1_0_0() { return cLazyLazyKeyword_1_0_0; }
		
		//transient?='transient'?
		public Assignment getTransientAssignment_1_1() { return cTransientAssignment_1_1; }
		
		//'transient'
		public Keyword getTransientTransientKeyword_1_1_0() { return cTransientTransientKeyword_1_1_0; }
		
		//domainKey?='domainKey'?
		public Assignment getDomainKeyAssignment_1_2() { return cDomainKeyAssignment_1_2; }
		
		//'domainKey'
		public Keyword getDomainKeyDomainKeyKeyword_1_2_0() { return cDomainKeyDomainKeyKeyword_1_2_0; }
		
		//domainDescription?='domainDescription'?
		public Assignment getDomainDescriptionAssignment_1_3() { return cDomainDescriptionAssignment_1_3; }
		
		//'domainDescription'
		public Keyword getDomainDescriptionDomainDescriptionKeyword_1_3_0() { return cDomainDescriptionDomainDescriptionKeyword_1_3_0; }
		
		//('constraints' '(' constraints+=MobaConstraint (',' constraints+=MobaConstraint)* ')')?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_1_4_0() { return cConstraintsKeyword_1_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_4_1() { return cLeftParenthesisKeyword_1_4_1; }
		
		//constraints+=MobaConstraint
		public Assignment getConstraintsAssignment_1_4_2() { return cConstraintsAssignment_1_4_2; }
		
		//MobaConstraint
		public RuleCall getConstraintsMobaConstraintParserRuleCall_1_4_2_0() { return cConstraintsMobaConstraintParserRuleCall_1_4_2_0; }
		
		//(',' constraints+=MobaConstraint)*
		public Group getGroup_1_4_3() { return cGroup_1_4_3; }
		
		//','
		public Keyword getCommaKeyword_1_4_3_0() { return cCommaKeyword_1_4_3_0; }
		
		//constraints+=MobaConstraint
		public Assignment getConstraintsAssignment_1_4_3_1() { return cConstraintsAssignment_1_4_3_1; }
		
		//MobaConstraint
		public RuleCall getConstraintsMobaConstraintParserRuleCall_1_4_3_1_0() { return cConstraintsMobaConstraintParserRuleCall_1_4_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_4_4() { return cRightParenthesisKeyword_1_4_4; }
		
		//type=[MobaDataType]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[MobaDataType]
		public CrossReference getTypeMobaDataTypeCrossReference_2_0() { return cTypeMobaDataTypeCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeMobaDataTypeIDTerminalRuleCall_2_0_1() { return cTypeMobaDataTypeIDTerminalRuleCall_2_0_1; }
		
		//MobaMultiplicityAble
		public RuleCall getMobaMultiplicityAbleParserRuleCall_3() { return cMobaMultiplicityAbleParserRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//MobaPropertiesAble?
		public RuleCall getMobaPropertiesAbleParserRuleCall_5() { return cMobaPropertiesAbleParserRuleCall_5; }
	}
	public class MobaMultiplicityAbleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaMultiplicityAble");
		private final Assignment cMultiplicityAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cMultiplicityMobaMuliplicityParserRuleCall_0 = (RuleCall)cMultiplicityAssignment.eContents().get(0);
		
		//fragment MobaMultiplicityAble:
		//	multiplicity=MobaMuliplicity?;
		@Override public ParserRule getRule() { return rule; }
		
		//multiplicity=MobaMuliplicity?
		public Assignment getMultiplicityAssignment() { return cMultiplicityAssignment; }
		
		//MobaMuliplicity
		public RuleCall getMultiplicityMobaMuliplicityParserRuleCall_0() { return cMultiplicityMobaMuliplicityParserRuleCall_0; }
	}
	public class MobaBeanReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaBeanReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cCascadingAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cCascadingCascadingKeyword_1_0_0 = (Keyword)cCascadingAssignment_1_0.eContents().get(0);
		private final Assignment cLazyAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cLazyLazyKeyword_1_1_0 = (Keyword)cLazyAssignment_1_1.eContents().get(0);
		private final Assignment cTransientAssignment_1_2 = (Assignment)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cTransientTransientKeyword_1_2_0 = (Keyword)cTransientAssignment_1_2.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeMobaBeanCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeMobaBeanIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeMobaBeanCrossReference_2_0.eContents().get(1);
		private final RuleCall cMobaMultiplicityAbleParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cMobaPropertiesAbleParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//MobaBeanReference:
		//	'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaBean] MobaMultiplicityAble
		//	name=ID
		//	MobaPropertiesAble?;
		@Override public ParserRule getRule() { return rule; }
		
		//'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaBean] MobaMultiplicityAble name=ID
		//MobaPropertiesAble?
		public Group getGroup() { return cGroup; }
		
		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//(cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//cascading?='cascading'?
		public Assignment getCascadingAssignment_1_0() { return cCascadingAssignment_1_0; }
		
		//'cascading'
		public Keyword getCascadingCascadingKeyword_1_0_0() { return cCascadingCascadingKeyword_1_0_0; }
		
		//lazy?='lazy'?
		public Assignment getLazyAssignment_1_1() { return cLazyAssignment_1_1; }
		
		//'lazy'
		public Keyword getLazyLazyKeyword_1_1_0() { return cLazyLazyKeyword_1_1_0; }
		
		//transient?='transient'?
		public Assignment getTransientAssignment_1_2() { return cTransientAssignment_1_2; }
		
		//'transient'
		public Keyword getTransientTransientKeyword_1_2_0() { return cTransientTransientKeyword_1_2_0; }
		
		//type=[MobaBean]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[MobaBean]
		public CrossReference getTypeMobaBeanCrossReference_2_0() { return cTypeMobaBeanCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeMobaBeanIDTerminalRuleCall_2_0_1() { return cTypeMobaBeanIDTerminalRuleCall_2_0_1; }
		
		//MobaMultiplicityAble
		public RuleCall getMobaMultiplicityAbleParserRuleCall_3() { return cMobaMultiplicityAbleParserRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//MobaPropertiesAble?
		public RuleCall getMobaPropertiesAbleParserRuleCall_5() { return cMobaPropertiesAbleParserRuleCall_5; }
	}
	public class MobaPayloadFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaPayloadFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMobaPayloadAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMobaPayloadReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MobaPayloadFeature:
		//	MobaPayloadAttribute | MobaPayloadReference;
		@Override public ParserRule getRule() { return rule; }
		
		//MobaPayloadAttribute | MobaPayloadReference
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MobaPayloadAttribute
		public RuleCall getMobaPayloadAttributeParserRuleCall_0() { return cMobaPayloadAttributeParserRuleCall_0; }
		
		//MobaPayloadReference
		public RuleCall getMobaPayloadReferenceParserRuleCall_1() { return cMobaPayloadReferenceParserRuleCall_1; }
	}
	public class MobaPayloadAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaPayloadAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cLazyAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cLazyLazyKeyword_1_0_0 = (Keyword)cLazyAssignment_1_0.eContents().get(0);
		private final Assignment cTransientAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cTransientTransientKeyword_1_1_0 = (Keyword)cTransientAssignment_1_1.eContents().get(0);
		private final Assignment cDomainKeyAssignment_1_2 = (Assignment)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cDomainKeyDomainKeyKeyword_1_2_0 = (Keyword)cDomainKeyAssignment_1_2.eContents().get(0);
		private final Assignment cDomainDescriptionAssignment_1_3 = (Assignment)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cDomainDescriptionDomainDescriptionKeyword_1_3_0 = (Keyword)cDomainDescriptionAssignment_1_3.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cUnorderedGroup_1.eContents().get(4);
		private final Keyword cConstraintsKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_4_1 = (Keyword)cGroup_1_4.eContents().get(1);
		private final Assignment cConstraintsAssignment_1_4_2 = (Assignment)cGroup_1_4.eContents().get(2);
		private final RuleCall cConstraintsMobaConstraintParserRuleCall_1_4_2_0 = (RuleCall)cConstraintsAssignment_1_4_2.eContents().get(0);
		private final Group cGroup_1_4_3 = (Group)cGroup_1_4.eContents().get(3);
		private final Keyword cCommaKeyword_1_4_3_0 = (Keyword)cGroup_1_4_3.eContents().get(0);
		private final Assignment cConstraintsAssignment_1_4_3_1 = (Assignment)cGroup_1_4_3.eContents().get(1);
		private final RuleCall cConstraintsMobaConstraintParserRuleCall_1_4_3_1_0 = (RuleCall)cConstraintsAssignment_1_4_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_4_4 = (Keyword)cGroup_1_4.eContents().get(4);
		private final Group cGroup_1_5 = (Group)cUnorderedGroup_1.eContents().get(5);
		private final Keyword cAliasKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_5_1 = (Keyword)cGroup_1_5.eContents().get(1);
		private final Assignment cAliasAssignment_1_5_2 = (Assignment)cGroup_1_5.eContents().get(2);
		private final RuleCall cAliasIDTerminalRuleCall_1_5_2_0 = (RuleCall)cAliasAssignment_1_5_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_5_3 = (Keyword)cGroup_1_5.eContents().get(3);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeMobaDataTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeMobaDataTypeIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeMobaDataTypeCrossReference_2_0.eContents().get(1);
		private final RuleCall cMobaMultiplicityAbleParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cMobaPropertiesAbleParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//MobaPayloadAttribute:
		//	'var' (lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? &
		//	('constraints' '(' constraints+=MobaConstraint (','
		//	constraints+=MobaConstraint)* ')')? & ('alias' '(' alias=ID ')')?) type=[MobaDataType] MobaMultiplicityAble name=ID
		//	MobaPropertiesAble?;
		@Override public ParserRule getRule() { return rule; }
		
		//'var' (lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? &
		//('constraints' '(' constraints+=MobaConstraint (',' constraints+=MobaConstraint)* ')')? & ('alias' '(' alias=ID ')')?)
		//type=[MobaDataType] MobaMultiplicityAble name=ID MobaPropertiesAble?
		public Group getGroup() { return cGroup; }
		
		//'var'
		public Keyword getVarKeyword_0() { return cVarKeyword_0; }
		
		//(lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? &
		//('constraints' '(' constraints+=MobaConstraint (',' constraints+=MobaConstraint)* ')')? & ('alias' '(' alias=ID ')')?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//lazy?='lazy'?
		public Assignment getLazyAssignment_1_0() { return cLazyAssignment_1_0; }
		
		//'lazy'
		public Keyword getLazyLazyKeyword_1_0_0() { return cLazyLazyKeyword_1_0_0; }
		
		//transient?='transient'?
		public Assignment getTransientAssignment_1_1() { return cTransientAssignment_1_1; }
		
		//'transient'
		public Keyword getTransientTransientKeyword_1_1_0() { return cTransientTransientKeyword_1_1_0; }
		
		//domainKey?='domainKey'?
		public Assignment getDomainKeyAssignment_1_2() { return cDomainKeyAssignment_1_2; }
		
		//'domainKey'
		public Keyword getDomainKeyDomainKeyKeyword_1_2_0() { return cDomainKeyDomainKeyKeyword_1_2_0; }
		
		//domainDescription?='domainDescription'?
		public Assignment getDomainDescriptionAssignment_1_3() { return cDomainDescriptionAssignment_1_3; }
		
		//'domainDescription'
		public Keyword getDomainDescriptionDomainDescriptionKeyword_1_3_0() { return cDomainDescriptionDomainDescriptionKeyword_1_3_0; }
		
		//('constraints' '(' constraints+=MobaConstraint (',' constraints+=MobaConstraint)* ')')?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_1_4_0() { return cConstraintsKeyword_1_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_4_1() { return cLeftParenthesisKeyword_1_4_1; }
		
		//constraints+=MobaConstraint
		public Assignment getConstraintsAssignment_1_4_2() { return cConstraintsAssignment_1_4_2; }
		
		//MobaConstraint
		public RuleCall getConstraintsMobaConstraintParserRuleCall_1_4_2_0() { return cConstraintsMobaConstraintParserRuleCall_1_4_2_0; }
		
		//(',' constraints+=MobaConstraint)*
		public Group getGroup_1_4_3() { return cGroup_1_4_3; }
		
		//','
		public Keyword getCommaKeyword_1_4_3_0() { return cCommaKeyword_1_4_3_0; }
		
		//constraints+=MobaConstraint
		public Assignment getConstraintsAssignment_1_4_3_1() { return cConstraintsAssignment_1_4_3_1; }
		
		//MobaConstraint
		public RuleCall getConstraintsMobaConstraintParserRuleCall_1_4_3_1_0() { return cConstraintsMobaConstraintParserRuleCall_1_4_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_4_4() { return cRightParenthesisKeyword_1_4_4; }
		
		//('alias' '(' alias=ID ')')?
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'alias'
		public Keyword getAliasKeyword_1_5_0() { return cAliasKeyword_1_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_5_1() { return cLeftParenthesisKeyword_1_5_1; }
		
		//alias=ID
		public Assignment getAliasAssignment_1_5_2() { return cAliasAssignment_1_5_2; }
		
		//ID
		public RuleCall getAliasIDTerminalRuleCall_1_5_2_0() { return cAliasIDTerminalRuleCall_1_5_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_5_3() { return cRightParenthesisKeyword_1_5_3; }
		
		//type=[MobaDataType]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[MobaDataType]
		public CrossReference getTypeMobaDataTypeCrossReference_2_0() { return cTypeMobaDataTypeCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeMobaDataTypeIDTerminalRuleCall_2_0_1() { return cTypeMobaDataTypeIDTerminalRuleCall_2_0_1; }
		
		//MobaMultiplicityAble
		public RuleCall getMobaMultiplicityAbleParserRuleCall_3() { return cMobaMultiplicityAbleParserRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//MobaPropertiesAble?
		public RuleCall getMobaPropertiesAbleParserRuleCall_5() { return cMobaPropertiesAbleParserRuleCall_5; }
	}
	public class MobaPayloadReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaPayloadReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cCascadingAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cCascadingCascadingKeyword_1_0_0 = (Keyword)cCascadingAssignment_1_0.eContents().get(0);
		private final Assignment cLazyAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cLazyLazyKeyword_1_1_0 = (Keyword)cLazyAssignment_1_1.eContents().get(0);
		private final Assignment cTransientAssignment_1_2 = (Assignment)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cTransientTransientKeyword_1_2_0 = (Keyword)cTransientAssignment_1_2.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeMobaPayloadCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeMobaPayloadIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeMobaPayloadCrossReference_2_0.eContents().get(1);
		private final RuleCall cMobaMultiplicityAbleParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cMobaPropertiesAbleParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//MobaPayloadReference:
		//	'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaPayload] MobaMultiplicityAble
		//	name=ID
		//	MobaPropertiesAble?;
		@Override public ParserRule getRule() { return rule; }
		
		//'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaPayload] MobaMultiplicityAble
		//name=ID MobaPropertiesAble?
		public Group getGroup() { return cGroup; }
		
		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//(cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//cascading?='cascading'?
		public Assignment getCascadingAssignment_1_0() { return cCascadingAssignment_1_0; }
		
		//'cascading'
		public Keyword getCascadingCascadingKeyword_1_0_0() { return cCascadingCascadingKeyword_1_0_0; }
		
		//lazy?='lazy'?
		public Assignment getLazyAssignment_1_1() { return cLazyAssignment_1_1; }
		
		//'lazy'
		public Keyword getLazyLazyKeyword_1_1_0() { return cLazyLazyKeyword_1_1_0; }
		
		//transient?='transient'?
		public Assignment getTransientAssignment_1_2() { return cTransientAssignment_1_2; }
		
		//'transient'
		public Keyword getTransientTransientKeyword_1_2_0() { return cTransientTransientKeyword_1_2_0; }
		
		//type=[MobaPayload]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[MobaPayload]
		public CrossReference getTypeMobaPayloadCrossReference_2_0() { return cTypeMobaPayloadCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeMobaPayloadIDTerminalRuleCall_2_0_1() { return cTypeMobaPayloadIDTerminalRuleCall_2_0_1; }
		
		//MobaMultiplicityAble
		public RuleCall getMobaMultiplicityAbleParserRuleCall_3() { return cMobaMultiplicityAbleParserRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//MobaPropertiesAble?
		public RuleCall getMobaPropertiesAbleParserRuleCall_5() { return cMobaPropertiesAbleParserRuleCall_5; }
	}
	public class MobaQueueFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaQueueFeature");
		private final RuleCall cMobaQueueReferenceParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//MobaQueueFeature:
		//	MobaQueueReference;
		@Override public ParserRule getRule() { return rule; }
		
		//MobaQueueReference
		public RuleCall getMobaQueueReferenceParserRuleCall() { return cMobaQueueReferenceParserRuleCall; }
	}
	public class MobaQueueReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaQueueReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cCascadingAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cCascadingCascadingKeyword_1_0_0 = (Keyword)cCascadingAssignment_1_0.eContents().get(0);
		private final Assignment cLazyAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cLazyLazyKeyword_1_1_0 = (Keyword)cLazyAssignment_1_1.eContents().get(0);
		private final Assignment cTransientAssignment_1_2 = (Assignment)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cTransientTransientKeyword_1_2_0 = (Keyword)cTransientAssignment_1_2.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeMobaDataCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeMobaDataIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeMobaDataCrossReference_2_0.eContents().get(1);
		private final RuleCall cMobaMultiplicityAbleParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cMobaPropertiesAbleParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//MobaQueueReference:
		//	'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaData] MobaMultiplicityAble
		//	name=ID
		//	MobaPropertiesAble?;
		@Override public ParserRule getRule() { return rule; }
		
		//'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaData] MobaMultiplicityAble name=ID
		//MobaPropertiesAble?
		public Group getGroup() { return cGroup; }
		
		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//(cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//cascading?='cascading'?
		public Assignment getCascadingAssignment_1_0() { return cCascadingAssignment_1_0; }
		
		//'cascading'
		public Keyword getCascadingCascadingKeyword_1_0_0() { return cCascadingCascadingKeyword_1_0_0; }
		
		//lazy?='lazy'?
		public Assignment getLazyAssignment_1_1() { return cLazyAssignment_1_1; }
		
		//'lazy'
		public Keyword getLazyLazyKeyword_1_1_0() { return cLazyLazyKeyword_1_1_0; }
		
		//transient?='transient'?
		public Assignment getTransientAssignment_1_2() { return cTransientAssignment_1_2; }
		
		//'transient'
		public Keyword getTransientTransientKeyword_1_2_0() { return cTransientTransientKeyword_1_2_0; }
		
		//type=[MobaData]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[MobaData]
		public CrossReference getTypeMobaDataCrossReference_2_0() { return cTypeMobaDataCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeMobaDataIDTerminalRuleCall_2_0_1() { return cTypeMobaDataIDTerminalRuleCall_2_0_1; }
		
		//MobaMultiplicityAble
		public RuleCall getMobaMultiplicityAbleParserRuleCall_3() { return cMobaMultiplicityAbleParserRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//MobaPropertiesAble?
		public RuleCall getMobaPropertiesAbleParserRuleCall_5() { return cMobaPropertiesAbleParserRuleCall_5; }
	}
	public class MobaMuliplicityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaMuliplicity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLowerAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLowerMobaLowerBoundEnumRuleCall_1_0 = (RuleCall)cLowerAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cUpperAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cUpperMobaUpperBoundEnumRuleCall_2_1_0 = (RuleCall)cUpperAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//MobaMuliplicity:
		//	'[' lower=MobaLowerBound ('..' upper=MobaUpperBound)? ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'[' lower=MobaLowerBound ('..' upper=MobaUpperBound)? ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//lower=MobaLowerBound
		public Assignment getLowerAssignment_1() { return cLowerAssignment_1; }
		
		//MobaLowerBound
		public RuleCall getLowerMobaLowerBoundEnumRuleCall_1_0() { return cLowerMobaLowerBoundEnumRuleCall_1_0; }
		
		//('..' upper=MobaUpperBound)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_2_0() { return cFullStopFullStopKeyword_2_0; }
		
		//upper=MobaUpperBound
		public Assignment getUpperAssignment_2_1() { return cUpperAssignment_2_1; }
		
		//MobaUpperBound
		public RuleCall getUpperMobaUpperBoundEnumRuleCall_2_1_0() { return cUpperMobaUpperBoundEnumRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class MobaConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaConstraint");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMobaRegexpConstraintParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMobaMinConstraintParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMobaMaxConstraintParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMobaMinLengthConstraintParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cMobaMaxLengthConstraintParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cMobaDigitsConstraintParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cMobaNullConstraintParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cMobaNotNullConstraintParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//MobaConstraint:
		//	MobaRegexpConstraint | MobaMinConstraint | MobaMaxConstraint | MobaMinLengthConstraint | MobaMaxLengthConstraint |
		//	MobaDigitsConstraint | MobaNullConstraint | MobaNotNullConstraint;
		@Override public ParserRule getRule() { return rule; }
		
		//MobaRegexpConstraint | MobaMinConstraint | MobaMaxConstraint | MobaMinLengthConstraint | MobaMaxLengthConstraint |
		//MobaDigitsConstraint | MobaNullConstraint | MobaNotNullConstraint
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MobaRegexpConstraint
		public RuleCall getMobaRegexpConstraintParserRuleCall_0() { return cMobaRegexpConstraintParserRuleCall_0; }
		
		//MobaMinConstraint
		public RuleCall getMobaMinConstraintParserRuleCall_1() { return cMobaMinConstraintParserRuleCall_1; }
		
		//MobaMaxConstraint
		public RuleCall getMobaMaxConstraintParserRuleCall_2() { return cMobaMaxConstraintParserRuleCall_2; }
		
		//MobaMinLengthConstraint
		public RuleCall getMobaMinLengthConstraintParserRuleCall_3() { return cMobaMinLengthConstraintParserRuleCall_3; }
		
		//MobaMaxLengthConstraint
		public RuleCall getMobaMaxLengthConstraintParserRuleCall_4() { return cMobaMaxLengthConstraintParserRuleCall_4; }
		
		//MobaDigitsConstraint
		public RuleCall getMobaDigitsConstraintParserRuleCall_5() { return cMobaDigitsConstraintParserRuleCall_5; }
		
		//MobaNullConstraint
		public RuleCall getMobaNullConstraintParserRuleCall_6() { return cMobaNullConstraintParserRuleCall_6; }
		
		//MobaNotNullConstraint
		public RuleCall getMobaNotNullConstraintParserRuleCall_7() { return cMobaNotNullConstraintParserRuleCall_7; }
	}
	public class MobaRegexpConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaRegexpConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRegexpKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cFilterStringAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cFilterStringSTRINGTerminalRuleCall_2_0_0 = (RuleCall)cFilterStringAssignment_2_0.eContents().get(0);
		private final Assignment cFilterConstAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final CrossReference cFilterConstMobaConstantCrossReference_2_1_0 = (CrossReference)cFilterConstAssignment_2_1.eContents().get(0);
		private final RuleCall cFilterConstMobaConstantIDTerminalRuleCall_2_1_0_1 = (RuleCall)cFilterConstMobaConstantCrossReference_2_1_0.eContents().get(1);
		
		//MobaRegexpConstraint:
		//	'regexp' '=' (filterString=STRING | filterConst=[MobaConstant]);
		@Override public ParserRule getRule() { return rule; }
		
		//'regexp' '=' (filterString=STRING | filterConst=[MobaConstant])
		public Group getGroup() { return cGroup; }
		
		//'regexp'
		public Keyword getRegexpKeyword_0() { return cRegexpKeyword_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//(filterString=STRING | filterConst=[MobaConstant])
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//filterString=STRING
		public Assignment getFilterStringAssignment_2_0() { return cFilterStringAssignment_2_0; }
		
		//STRING
		public RuleCall getFilterStringSTRINGTerminalRuleCall_2_0_0() { return cFilterStringSTRINGTerminalRuleCall_2_0_0; }
		
		//filterConst=[MobaConstant]
		public Assignment getFilterConstAssignment_2_1() { return cFilterConstAssignment_2_1; }
		
		//[MobaConstant]
		public CrossReference getFilterConstMobaConstantCrossReference_2_1_0() { return cFilterConstMobaConstantCrossReference_2_1_0; }
		
		//ID
		public RuleCall getFilterConstMobaConstantIDTerminalRuleCall_2_1_0_1() { return cFilterConstMobaConstantIDTerminalRuleCall_2_1_0_1; }
	}
	public class MobaMinConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaMinConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMinKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cFilterValueAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cFilterValueDOUBLETerminalRuleCall_2_0_0 = (RuleCall)cFilterValueAssignment_2_0.eContents().get(0);
		private final Assignment cFilterConstAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final CrossReference cFilterConstMobaConstantCrossReference_2_1_0 = (CrossReference)cFilterConstAssignment_2_1.eContents().get(0);
		private final RuleCall cFilterConstMobaConstantIDTerminalRuleCall_2_1_0_1 = (RuleCall)cFilterConstMobaConstantCrossReference_2_1_0.eContents().get(1);
		
		//MobaMinConstraint:
		//	'min' '=' (filterValue=DOUBLE | filterConst=[MobaConstant]);
		@Override public ParserRule getRule() { return rule; }
		
		//'min' '=' (filterValue=DOUBLE | filterConst=[MobaConstant])
		public Group getGroup() { return cGroup; }
		
		//'min'
		public Keyword getMinKeyword_0() { return cMinKeyword_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//(filterValue=DOUBLE | filterConst=[MobaConstant])
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//filterValue=DOUBLE
		public Assignment getFilterValueAssignment_2_0() { return cFilterValueAssignment_2_0; }
		
		//DOUBLE
		public RuleCall getFilterValueDOUBLETerminalRuleCall_2_0_0() { return cFilterValueDOUBLETerminalRuleCall_2_0_0; }
		
		//filterConst=[MobaConstant]
		public Assignment getFilterConstAssignment_2_1() { return cFilterConstAssignment_2_1; }
		
		//[MobaConstant]
		public CrossReference getFilterConstMobaConstantCrossReference_2_1_0() { return cFilterConstMobaConstantCrossReference_2_1_0; }
		
		//ID
		public RuleCall getFilterConstMobaConstantIDTerminalRuleCall_2_1_0_1() { return cFilterConstMobaConstantIDTerminalRuleCall_2_1_0_1; }
	}
	public class MobaMaxConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaMaxConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMaxKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cFilterValueAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cFilterValueDOUBLETerminalRuleCall_2_0_0 = (RuleCall)cFilterValueAssignment_2_0.eContents().get(0);
		private final Assignment cFilterConstAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final CrossReference cFilterConstMobaConstantCrossReference_2_1_0 = (CrossReference)cFilterConstAssignment_2_1.eContents().get(0);
		private final RuleCall cFilterConstMobaConstantIDTerminalRuleCall_2_1_0_1 = (RuleCall)cFilterConstMobaConstantCrossReference_2_1_0.eContents().get(1);
		
		//MobaMaxConstraint:
		//	'max' '=' (filterValue=DOUBLE | filterConst=[MobaConstant]);
		@Override public ParserRule getRule() { return rule; }
		
		//'max' '=' (filterValue=DOUBLE | filterConst=[MobaConstant])
		public Group getGroup() { return cGroup; }
		
		//'max'
		public Keyword getMaxKeyword_0() { return cMaxKeyword_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//(filterValue=DOUBLE | filterConst=[MobaConstant])
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//filterValue=DOUBLE
		public Assignment getFilterValueAssignment_2_0() { return cFilterValueAssignment_2_0; }
		
		//DOUBLE
		public RuleCall getFilterValueDOUBLETerminalRuleCall_2_0_0() { return cFilterValueDOUBLETerminalRuleCall_2_0_0; }
		
		//filterConst=[MobaConstant]
		public Assignment getFilterConstAssignment_2_1() { return cFilterConstAssignment_2_1; }
		
		//[MobaConstant]
		public CrossReference getFilterConstMobaConstantCrossReference_2_1_0() { return cFilterConstMobaConstantCrossReference_2_1_0; }
		
		//ID
		public RuleCall getFilterConstMobaConstantIDTerminalRuleCall_2_1_0_1() { return cFilterConstMobaConstantIDTerminalRuleCall_2_1_0_1; }
	}
	public class MobaMinLengthConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaMinLengthConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMinLengthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cFilterValueAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cFilterValueINTTerminalRuleCall_2_0_0 = (RuleCall)cFilterValueAssignment_2_0.eContents().get(0);
		private final Assignment cFilterConstAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final CrossReference cFilterConstMobaConstantCrossReference_2_1_0 = (CrossReference)cFilterConstAssignment_2_1.eContents().get(0);
		private final RuleCall cFilterConstMobaConstantIDTerminalRuleCall_2_1_0_1 = (RuleCall)cFilterConstMobaConstantCrossReference_2_1_0.eContents().get(1);
		
		//MobaMinLengthConstraint:
		//	'minLength' '=' (filterValue=INT | filterConst=[MobaConstant]);
		@Override public ParserRule getRule() { return rule; }
		
		//'minLength' '=' (filterValue=INT | filterConst=[MobaConstant])
		public Group getGroup() { return cGroup; }
		
		//'minLength'
		public Keyword getMinLengthKeyword_0() { return cMinLengthKeyword_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//(filterValue=INT | filterConst=[MobaConstant])
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//filterValue=INT
		public Assignment getFilterValueAssignment_2_0() { return cFilterValueAssignment_2_0; }
		
		//INT
		public RuleCall getFilterValueINTTerminalRuleCall_2_0_0() { return cFilterValueINTTerminalRuleCall_2_0_0; }
		
		//filterConst=[MobaConstant]
		public Assignment getFilterConstAssignment_2_1() { return cFilterConstAssignment_2_1; }
		
		//[MobaConstant]
		public CrossReference getFilterConstMobaConstantCrossReference_2_1_0() { return cFilterConstMobaConstantCrossReference_2_1_0; }
		
		//ID
		public RuleCall getFilterConstMobaConstantIDTerminalRuleCall_2_1_0_1() { return cFilterConstMobaConstantIDTerminalRuleCall_2_1_0_1; }
	}
	public class MobaMaxLengthConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaMaxLengthConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMaxLengthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cFilterValueAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cFilterValueINTTerminalRuleCall_2_0_0 = (RuleCall)cFilterValueAssignment_2_0.eContents().get(0);
		private final Assignment cFilterConstAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final CrossReference cFilterConstMobaConstantCrossReference_2_1_0 = (CrossReference)cFilterConstAssignment_2_1.eContents().get(0);
		private final RuleCall cFilterConstMobaConstantIDTerminalRuleCall_2_1_0_1 = (RuleCall)cFilterConstMobaConstantCrossReference_2_1_0.eContents().get(1);
		
		//MobaMaxLengthConstraint:
		//	'maxLength' '=' (filterValue=INT | filterConst=[MobaConstant]);
		@Override public ParserRule getRule() { return rule; }
		
		//'maxLength' '=' (filterValue=INT | filterConst=[MobaConstant])
		public Group getGroup() { return cGroup; }
		
		//'maxLength'
		public Keyword getMaxLengthKeyword_0() { return cMaxLengthKeyword_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//(filterValue=INT | filterConst=[MobaConstant])
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//filterValue=INT
		public Assignment getFilterValueAssignment_2_0() { return cFilterValueAssignment_2_0; }
		
		//INT
		public RuleCall getFilterValueINTTerminalRuleCall_2_0_0() { return cFilterValueINTTerminalRuleCall_2_0_0; }
		
		//filterConst=[MobaConstant]
		public Assignment getFilterConstAssignment_2_1() { return cFilterConstAssignment_2_1; }
		
		//[MobaConstant]
		public CrossReference getFilterConstMobaConstantCrossReference_2_1_0() { return cFilterConstMobaConstantCrossReference_2_1_0; }
		
		//ID
		public RuleCall getFilterConstMobaConstantIDTerminalRuleCall_2_1_0_1() { return cFilterConstMobaConstantIDTerminalRuleCall_2_1_0_1; }
	}
	public class MobaDigitsConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaDigitsConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDigitsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cFilterIntegerValueAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cFilterIntegerValueINTTerminalRuleCall_2_0_0 = (RuleCall)cFilterIntegerValueAssignment_2_0.eContents().get(0);
		private final Assignment cFilterIntegerConstAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final CrossReference cFilterIntegerConstMobaConstantCrossReference_2_1_0 = (CrossReference)cFilterIntegerConstAssignment_2_1.eContents().get(0);
		private final RuleCall cFilterIntegerConstMobaConstantIDTerminalRuleCall_2_1_0_1 = (RuleCall)cFilterIntegerConstMobaConstantCrossReference_2_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cFilterFractionValueAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cFilterFractionValueINTTerminalRuleCall_4_0_0 = (RuleCall)cFilterFractionValueAssignment_4_0.eContents().get(0);
		private final Assignment cFilterFractionConstAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final CrossReference cFilterFractionConstMobaConstantCrossReference_4_1_0 = (CrossReference)cFilterFractionConstAssignment_4_1.eContents().get(0);
		private final RuleCall cFilterFractionConstMobaConstantIDTerminalRuleCall_4_1_0_1 = (RuleCall)cFilterFractionConstMobaConstantCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MobaDigitsConstraint:
		//	'digits' '(' (filterIntegerValue=INT | filterIntegerConst=[MobaConstant]) ',' (filterFractionValue=INT |
		//	filterFractionConst=[MobaConstant]) ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'digits' '(' (filterIntegerValue=INT | filterIntegerConst=[MobaConstant]) ',' (filterFractionValue=INT |
		//filterFractionConst=[MobaConstant]) ')'
		public Group getGroup() { return cGroup; }
		
		//'digits'
		public Keyword getDigitsKeyword_0() { return cDigitsKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//(filterIntegerValue=INT | filterIntegerConst=[MobaConstant])
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//filterIntegerValue=INT
		public Assignment getFilterIntegerValueAssignment_2_0() { return cFilterIntegerValueAssignment_2_0; }
		
		//INT
		public RuleCall getFilterIntegerValueINTTerminalRuleCall_2_0_0() { return cFilterIntegerValueINTTerminalRuleCall_2_0_0; }
		
		//filterIntegerConst=[MobaConstant]
		public Assignment getFilterIntegerConstAssignment_2_1() { return cFilterIntegerConstAssignment_2_1; }
		
		//[MobaConstant]
		public CrossReference getFilterIntegerConstMobaConstantCrossReference_2_1_0() { return cFilterIntegerConstMobaConstantCrossReference_2_1_0; }
		
		//ID
		public RuleCall getFilterIntegerConstMobaConstantIDTerminalRuleCall_2_1_0_1() { return cFilterIntegerConstMobaConstantIDTerminalRuleCall_2_1_0_1; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//(filterFractionValue=INT | filterFractionConst=[MobaConstant])
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//filterFractionValue=INT
		public Assignment getFilterFractionValueAssignment_4_0() { return cFilterFractionValueAssignment_4_0; }
		
		//INT
		public RuleCall getFilterFractionValueINTTerminalRuleCall_4_0_0() { return cFilterFractionValueINTTerminalRuleCall_4_0_0; }
		
		//filterFractionConst=[MobaConstant]
		public Assignment getFilterFractionConstAssignment_4_1() { return cFilterFractionConstAssignment_4_1; }
		
		//[MobaConstant]
		public CrossReference getFilterFractionConstMobaConstantCrossReference_4_1_0() { return cFilterFractionConstMobaConstantCrossReference_4_1_0; }
		
		//ID
		public RuleCall getFilterFractionConstMobaConstantIDTerminalRuleCall_4_1_0_1() { return cFilterFractionConstMobaConstantIDTerminalRuleCall_4_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class MobaNullConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaNullConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMobaNullConstraintAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIsNullKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//MobaNullConstraint:
		//	{MobaNullConstraint}
		//	'isNull';
		@Override public ParserRule getRule() { return rule; }
		
		//{MobaNullConstraint} 'isNull'
		public Group getGroup() { return cGroup; }
		
		//{MobaNullConstraint}
		public Action getMobaNullConstraintAction_0() { return cMobaNullConstraintAction_0; }
		
		//'isNull'
		public Keyword getIsNullKeyword_1() { return cIsNullKeyword_1; }
	}
	public class MobaNotNullConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaNotNullConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMobaNotNullConstraintAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIsNotNullKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//MobaNotNullConstraint:
		//	{MobaNotNullConstraint}
		//	'isNotNull';
		@Override public ParserRule getRule() { return rule; }
		
		//{MobaNotNullConstraint} 'isNotNull'
		public Group getGroup() { return cGroup; }
		
		//{MobaNotNullConstraint}
		public Action getMobaNotNullConstraintAction_0() { return cMobaNotNullConstraintAction_0; }
		
		//'isNotNull'
		public Keyword getIsNotNullKeyword_1() { return cIsNotNullKeyword_1; }
	}
	
	public class MobaLowerBoundElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaLowerBound");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMANYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMANYAsteriskKeyword_0_0 = (Keyword)cMANYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cZEROEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cZERO0Keyword_1_0 = (Keyword)cZEROEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cOPTIONALEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cOPTIONALQuestionMarkKeyword_2_0 = (Keyword)cOPTIONALEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cATLEASTONEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cATLEASTONEPlusSignKeyword_3_0 = (Keyword)cATLEASTONEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cONEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cONE1Keyword_4_0 = (Keyword)cONEEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum MobaLowerBound:
		//	MANY='*' | ZERO='0' | OPTIONAL='?' | ATLEASTONE='+' | ONE='1';
		public EnumRule getRule() { return rule; }
		
		//MANY='*' | ZERO='0' | OPTIONAL='?' | ATLEASTONE='+' | ONE='1'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MANY='*'
		public EnumLiteralDeclaration getMANYEnumLiteralDeclaration_0() { return cMANYEnumLiteralDeclaration_0; }
		
		//'*'
		public Keyword getMANYAsteriskKeyword_0_0() { return cMANYAsteriskKeyword_0_0; }
		
		//ZERO='0'
		public EnumLiteralDeclaration getZEROEnumLiteralDeclaration_1() { return cZEROEnumLiteralDeclaration_1; }
		
		//'0'
		public Keyword getZERO0Keyword_1_0() { return cZERO0Keyword_1_0; }
		
		//OPTIONAL='?'
		public EnumLiteralDeclaration getOPTIONALEnumLiteralDeclaration_2() { return cOPTIONALEnumLiteralDeclaration_2; }
		
		//'?'
		public Keyword getOPTIONALQuestionMarkKeyword_2_0() { return cOPTIONALQuestionMarkKeyword_2_0; }
		
		//ATLEASTONE='+'
		public EnumLiteralDeclaration getATLEASTONEEnumLiteralDeclaration_3() { return cATLEASTONEEnumLiteralDeclaration_3; }
		
		//'+'
		public Keyword getATLEASTONEPlusSignKeyword_3_0() { return cATLEASTONEPlusSignKeyword_3_0; }
		
		//ONE='1'
		public EnumLiteralDeclaration getONEEnumLiteralDeclaration_4() { return cONEEnumLiteralDeclaration_4; }
		
		//'1'
		public Keyword getONE1Keyword_4_0() { return cONE1Keyword_4_0; }
	}
	public class MobaUpperBoundElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaUpperBound");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMANYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMANYAsteriskKeyword_0_0 = (Keyword)cMANYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cONEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cONE1Keyword_1_0 = (Keyword)cONEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum MobaUpperBound:
		//	MANY='*' | ONE='1';
		public EnumRule getRule() { return rule; }
		
		//MANY='*' | ONE='1'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MANY='*'
		public EnumLiteralDeclaration getMANYEnumLiteralDeclaration_0() { return cMANYEnumLiteralDeclaration_0; }
		
		//'*'
		public Keyword getMANYAsteriskKeyword_0_0() { return cMANYAsteriskKeyword_0_0; }
		
		//ONE='1'
		public EnumLiteralDeclaration getONEEnumLiteralDeclaration_1() { return cONEEnumLiteralDeclaration_1; }
		
		//'1'
		public Keyword getONE1Keyword_1_0() { return cONE1Keyword_1_0; }
	}
	
	private final MobaApplicationElements pMobaApplication;
	private final MobaApplicationFeatureElements pMobaApplicationFeature;
	private final MobaTemplateElements pMobaTemplate;
	private final MobaGeneratorElements pMobaGenerator;
	private final MobaGeneratorFeatureElements pMobaGeneratorFeature;
	private final MobaGeneratorIDFeatureElements pMobaGeneratorIDFeature;
	private final MobaGeneratorMixinFeatureElements pMobaGeneratorMixinFeature;
	private final MobaDataTypeElements pMobaDataType;
	private final MobaEnumElements pMobaEnum;
	private final MobaEnumLiteralElements pMobaEnumLiteral;
	private final MobaConstantElements pMobaConstant;
	private final MobaConstantValueElements pMobaConstantValue;
	private final MobaPropertiesAbleElements pMobaPropertiesAble;
	private final MobaPropertyElements pMobaProperty;
	private final MobaDataElements pMobaData;
	private final MobaSettingsElements pMobaSettings;
	private final MobaCacheElements pMobaCache;
	private final MobaBeanElements pMobaBean;
	private final MobaBeanIndexElements pMobaBeanIndex;
	private final MobaPayloadElements pMobaPayload;
	private final MobaQueueElements pMobaQueue;
	private final MobaServiceElements pMobaService;
	private final MobaRestCustomElements pMobaRestCustom;
	private final MobaRestCrudElements pMobaRestCrud;
	private final MobaBeanFeatureElements pMobaBeanFeature;
	private final MobaBeanAttributeElements pMobaBeanAttribute;
	private final MobaSettingsFeatureElements pMobaSettingsFeature;
	private final MobaSettingsAttributeElements pMobaSettingsAttribute;
	private final MobaMultiplicityAbleElements pMobaMultiplicityAble;
	private final MobaBeanReferenceElements pMobaBeanReference;
	private final MobaPayloadFeatureElements pMobaPayloadFeature;
	private final MobaPayloadAttributeElements pMobaPayloadAttribute;
	private final MobaPayloadReferenceElements pMobaPayloadReference;
	private final MobaQueueFeatureElements pMobaQueueFeature;
	private final MobaQueueReferenceElements pMobaQueueReference;
	private final MobaMuliplicityElements pMobaMuliplicity;
	private final MobaConstraintElements pMobaConstraint;
	private final MobaRegexpConstraintElements pMobaRegexpConstraint;
	private final MobaMinConstraintElements pMobaMinConstraint;
	private final MobaMaxConstraintElements pMobaMaxConstraint;
	private final MobaMinLengthConstraintElements pMobaMinLengthConstraint;
	private final MobaMaxLengthConstraintElements pMobaMaxLengthConstraint;
	private final MobaDigitsConstraintElements pMobaDigitsConstraint;
	private final MobaNullConstraintElements pMobaNullConstraint;
	private final MobaNotNullConstraintElements pMobaNotNullConstraint;
	private final MobaLowerBoundElements eMobaLowerBound;
	private final MobaUpperBoundElements eMobaUpperBound;
	private final TerminalRule tINT;
	private final TerminalRule tDOWNLOAD_TEMPLATE;
	private final TerminalRule tDOUBLE;
	private final TerminalRule tFLOAT;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MobaGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pMobaApplication = new MobaApplicationElements();
		this.pMobaApplicationFeature = new MobaApplicationFeatureElements();
		this.pMobaTemplate = new MobaTemplateElements();
		this.pMobaGenerator = new MobaGeneratorElements();
		this.pMobaGeneratorFeature = new MobaGeneratorFeatureElements();
		this.pMobaGeneratorIDFeature = new MobaGeneratorIDFeatureElements();
		this.pMobaGeneratorMixinFeature = new MobaGeneratorMixinFeatureElements();
		this.pMobaDataType = new MobaDataTypeElements();
		this.pMobaEnum = new MobaEnumElements();
		this.pMobaEnumLiteral = new MobaEnumLiteralElements();
		this.pMobaConstant = new MobaConstantElements();
		this.pMobaConstantValue = new MobaConstantValueElements();
		this.pMobaPropertiesAble = new MobaPropertiesAbleElements();
		this.pMobaProperty = new MobaPropertyElements();
		this.pMobaData = new MobaDataElements();
		this.pMobaSettings = new MobaSettingsElements();
		this.pMobaCache = new MobaCacheElements();
		this.pMobaBean = new MobaBeanElements();
		this.pMobaBeanIndex = new MobaBeanIndexElements();
		this.pMobaPayload = new MobaPayloadElements();
		this.pMobaQueue = new MobaQueueElements();
		this.pMobaService = new MobaServiceElements();
		this.pMobaRestCustom = new MobaRestCustomElements();
		this.pMobaRestCrud = new MobaRestCrudElements();
		this.pMobaBeanFeature = new MobaBeanFeatureElements();
		this.pMobaBeanAttribute = new MobaBeanAttributeElements();
		this.pMobaSettingsFeature = new MobaSettingsFeatureElements();
		this.pMobaSettingsAttribute = new MobaSettingsAttributeElements();
		this.pMobaMultiplicityAble = new MobaMultiplicityAbleElements();
		this.pMobaBeanReference = new MobaBeanReferenceElements();
		this.pMobaPayloadFeature = new MobaPayloadFeatureElements();
		this.pMobaPayloadAttribute = new MobaPayloadAttributeElements();
		this.pMobaPayloadReference = new MobaPayloadReferenceElements();
		this.pMobaQueueFeature = new MobaQueueFeatureElements();
		this.pMobaQueueReference = new MobaQueueReferenceElements();
		this.pMobaMuliplicity = new MobaMuliplicityElements();
		this.pMobaConstraint = new MobaConstraintElements();
		this.pMobaRegexpConstraint = new MobaRegexpConstraintElements();
		this.pMobaMinConstraint = new MobaMinConstraintElements();
		this.pMobaMaxConstraint = new MobaMaxConstraintElements();
		this.pMobaMinLengthConstraint = new MobaMinLengthConstraintElements();
		this.pMobaMaxLengthConstraint = new MobaMaxLengthConstraintElements();
		this.pMobaDigitsConstraint = new MobaDigitsConstraintElements();
		this.pMobaNullConstraint = new MobaNullConstraintElements();
		this.pMobaNotNullConstraint = new MobaNotNullConstraintElements();
		this.eMobaLowerBound = new MobaLowerBoundElements();
		this.eMobaUpperBound = new MobaUpperBoundElements();
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.INT");
		this.tDOWNLOAD_TEMPLATE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.DOWNLOAD_TEMPLATE");
		this.tDOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.DOUBLE");
		this.tFLOAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.FLOAT");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.mobadsl.grammar.Moba".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//MobaApplication:
	//	'application' name=ID '{'
	//	features+=MobaApplicationFeature* '}';
	public MobaApplicationElements getMobaApplicationAccess() {
		return pMobaApplication;
	}
	
	public ParserRule getMobaApplicationRule() {
		return getMobaApplicationAccess().getRule();
	}
	
	//MobaApplicationFeature:
	//	MobaDataType | MobaTemplate | MobaConstant | MobaSettings | MobaData | MobaService | MobaGenerator;
	public MobaApplicationFeatureElements getMobaApplicationFeatureAccess() {
		return pMobaApplicationFeature;
	}
	
	public ParserRule getMobaApplicationFeatureRule() {
		return getMobaApplicationFeatureAccess().getRule();
	}
	
	/// **
	// * Will import a Moba-Application.
	// * / MobaTemplate:
	//	'use template' (template=[MobaApplication] | downloadTemplate=DOWNLOAD_TEMPLATE);
	public MobaTemplateElements getMobaTemplateAccess() {
		return pMobaTemplate;
	}
	
	public ParserRule getMobaTemplateRule() {
		return getMobaTemplateAccess().getRule();
	}
	
	//MobaGenerator:
	//	active?='active'? 'generator' name=ID '{'
	//	features+=MobaGeneratorFeature*
	//	'}';
	public MobaGeneratorElements getMobaGeneratorAccess() {
		return pMobaGenerator;
	}
	
	public ParserRule getMobaGeneratorRule() {
		return getMobaGeneratorAccess().getRule();
	}
	
	//MobaGeneratorFeature:
	//	MobaGeneratorIDFeature | MobaGeneratorMixinFeature;
	public MobaGeneratorFeatureElements getMobaGeneratorFeatureAccess() {
		return pMobaGeneratorFeature;
	}
	
	public ParserRule getMobaGeneratorFeatureRule() {
		return getMobaGeneratorFeatureAccess().getRule();
	}
	
	//MobaGeneratorIDFeature:
	//	'id' '=' (generatorConst=[MobaConstant] | generatorString=STRING);
	public MobaGeneratorIDFeatureElements getMobaGeneratorIDFeatureAccess() {
		return pMobaGeneratorIDFeature;
	}
	
	public ParserRule getMobaGeneratorIDFeatureRule() {
		return getMobaGeneratorIDFeatureAccess().getRule();
	}
	
	//MobaGeneratorMixinFeature:
	//	'mixin' generatorRef=[MobaGenerator];
	public MobaGeneratorMixinFeatureElements getMobaGeneratorMixinFeatureAccess() {
		return pMobaGeneratorMixinFeature;
	}
	
	public ParserRule getMobaGeneratorMixinFeatureRule() {
		return getMobaGeneratorMixinFeatureAccess().getRule();
	}
	
	//MobaDataType:
	//	'datatype' name=ID ('extends' superType=[MobaDataType])? (primitive?='isPrimitive'? & array?='isArray'? &
	//	((date?='isDate' | time?='isTime' | timestamp?='isTimestamp') ('(' (dateFormatString=STRING |
	//	dateFormatConst=[MobaConstant]) ')')?)?
	//	& ('constraints' '(' constraints+=MobaConstraint (',' constraints+=MobaConstraint)* ')')?
	//	& enumAST=MobaEnum?) MobaPropertiesAble?;
	public MobaDataTypeElements getMobaDataTypeAccess() {
		return pMobaDataType;
	}
	
	public ParserRule getMobaDataTypeRule() {
		return getMobaDataTypeAccess().getRule();
	}
	
	//MobaEnum:
	//	'enum' name=ID '{'
	//	literals+=MobaEnumLiteral (',' literals+=MobaEnumLiteral)*
	//	'}';
	public MobaEnumElements getMobaEnumAccess() {
		return pMobaEnum;
	}
	
	public ParserRule getMobaEnumRule() {
		return getMobaEnumAccess().getRule();
	}
	
	//MobaEnumLiteral:
	//	'lit' name=ID '=' '(' literal=STRING ',' value=INT ')';
	public MobaEnumLiteralElements getMobaEnumLiteralAccess() {
		return pMobaEnumLiteral;
	}
	
	public ParserRule getMobaEnumLiteralRule() {
		return getMobaEnumLiteralAccess().getRule();
	}
	
	//MobaConstant:
	//	'const' name=ID '=' valueAST=MobaConstantValue MobaPropertiesAble?;
	public MobaConstantElements getMobaConstantAccess() {
		return pMobaConstant;
	}
	
	public ParserRule getMobaConstantRule() {
		return getMobaConstantAccess().getRule();
	}
	
	//MobaConstantValue:
	//	(valueString=STRING | valueInt=INT | valueDouble=DOUBLE | valueConst=[MobaConstant]) ('+' tail=MobaConstantValue)?;
	public MobaConstantValueElements getMobaConstantValueAccess() {
		return pMobaConstantValue;
	}
	
	public ParserRule getMobaConstantValueRule() {
		return getMobaConstantValueAccess().getRule();
	}
	
	//fragment MobaPropertiesAble:
	//	'[' properties+=MobaProperty (',' properties+=MobaProperty)* ']';
	public MobaPropertiesAbleElements getMobaPropertiesAbleAccess() {
		return pMobaPropertiesAble;
	}
	
	public ParserRule getMobaPropertiesAbleRule() {
		return getMobaPropertiesAbleAccess().getRule();
	}
	
	//MobaProperty:
	//	(keyString=STRING | keyConst=[MobaConstant]) '=' (valueString=STRING | valueConst=[MobaConstant]);
	public MobaPropertyElements getMobaPropertyAccess() {
		return pMobaProperty;
	}
	
	public ParserRule getMobaPropertyRule() {
		return getMobaPropertyAccess().getRule();
	}
	
	//MobaData:
	//	MobaBean | MobaPayload | MobaQueue;
	public MobaDataElements getMobaDataAccess() {
		return pMobaData;
	}
	
	public ParserRule getMobaDataRule() {
		return getMobaDataAccess().getRule();
	}
	
	//MobaSettings:
	//	{MobaSettings} active?='active'? 'settings' name=ID ('extends' superType=[MobaSettings])? MobaPropertiesAble? '{'
	//	features+=MobaSettingsFeature*
	//	'}';
	public MobaSettingsElements getMobaSettingsAccess() {
		return pMobaSettings;
	}
	
	public ParserRule getMobaSettingsRule() {
		return getMobaSettingsAccess().getRule();
	}
	
	//MobaCache:
	//	{MobaCache}
	//	'cache' ('(' (('type' '=' (cacheTypeString=STRING | cacheTypeConst=[MobaConstant]))?
	//	// strategy
	//	& ('strategy' '=' (cacheStrategyString=STRING | cacheStrategyConst=[MobaConstant]))?) ')')?;
	public MobaCacheElements getMobaCacheAccess() {
		return pMobaCache;
	}
	
	public ParserRule getMobaCacheRule() {
		return getMobaCacheAccess().getRule();
	}
	
	//MobaBean:
	//	'bean' name=ID (('extends' superType=[MobaBean])? & cache=MobaCache?) MobaPropertiesAble? '{'
	//	features+=MobaBeanFeature*
	//	index=MobaBeanIndex?
	//	'}';
	public MobaBeanElements getMobaBeanAccess() {
		return pMobaBean;
	}
	
	public ParserRule getMobaBeanRule() {
		return getMobaBeanAccess().getRule();
	}
	
	//MobaBeanIndex:
	//	'index' attributes+=[MobaBeanAttribute] (',' attributes+=[MobaBeanAttribute]*);
	public MobaBeanIndexElements getMobaBeanIndexAccess() {
		return pMobaBeanIndex;
	}
	
	public ParserRule getMobaBeanIndexRule() {
		return getMobaBeanIndexAccess().getRule();
	}
	
	//MobaPayload:
	//	'payload' name=ID ('extends' superType=[MobaPayload])? MobaPropertiesAble? '{'
	//	features+=MobaPayloadFeature*
	//	'}';
	public MobaPayloadElements getMobaPayloadAccess() {
		return pMobaPayload;
	}
	
	public ParserRule getMobaPayloadRule() {
		return getMobaPayloadAccess().getRule();
	}
	
	//MobaQueue:
	//	'queue' name=ID ('extends' superType=[MobaQueue])? MobaPropertiesAble? '{'
	//	features+=MobaQueueFeature*
	//	'}';
	public MobaQueueElements getMobaQueueAccess() {
		return pMobaQueue;
	}
	
	public ParserRule getMobaQueueRule() {
		return getMobaQueueAccess().getRule();
	}
	
	//MobaService:
	//	MobaRestCustom | MobaRestCrud;
	public MobaServiceElements getMobaServiceAccess() {
		return pMobaService;
	}
	
	public ParserRule getMobaServiceRule() {
		return getMobaServiceAccess().getRule();
	}
	
	//MobaRestCustom:
	//	'rest' name=ID MobaPropertiesAble?;
	public MobaRestCustomElements getMobaRestCustomAccess() {
		return pMobaRestCustom;
	}
	
	public ParserRule getMobaRestCustomRule() {
		return getMobaRestCustomAccess().getRule();
	}
	
	//MobaRestCrud:
	//	'restCrud' name=ID MobaPropertiesAble?;
	public MobaRestCrudElements getMobaRestCrudAccess() {
		return pMobaRestCrud;
	}
	
	public ParserRule getMobaRestCrudRule() {
		return getMobaRestCrudAccess().getRule();
	}
	
	//MobaBeanFeature:
	//	MobaBeanAttribute | MobaBeanReference;
	public MobaBeanFeatureElements getMobaBeanFeatureAccess() {
		return pMobaBeanFeature;
	}
	
	public ParserRule getMobaBeanFeatureRule() {
		return getMobaBeanFeatureAccess().getRule();
	}
	
	//MobaBeanAttribute:
	//	'var' (lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? &
	//	('constraints' '(' constraints+=MobaConstraint (','
	//	constraints+=MobaConstraint)* ')')?) type=[MobaDataType] MobaMultiplicityAble name=ID MobaPropertiesAble?;
	public MobaBeanAttributeElements getMobaBeanAttributeAccess() {
		return pMobaBeanAttribute;
	}
	
	public ParserRule getMobaBeanAttributeRule() {
		return getMobaBeanAttributeAccess().getRule();
	}
	
	//MobaSettingsFeature:
	//	MobaSettingsAttribute;
	public MobaSettingsFeatureElements getMobaSettingsFeatureAccess() {
		return pMobaSettingsFeature;
	}
	
	public ParserRule getMobaSettingsFeatureRule() {
		return getMobaSettingsFeatureAccess().getRule();
	}
	
	//MobaSettingsAttribute:
	//	'var' (lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? &
	//	('constraints' '(' constraints+=MobaConstraint (','
	//	constraints+=MobaConstraint)* ')')?) type=[MobaDataType] MobaMultiplicityAble name=ID MobaPropertiesAble?;
	public MobaSettingsAttributeElements getMobaSettingsAttributeAccess() {
		return pMobaSettingsAttribute;
	}
	
	public ParserRule getMobaSettingsAttributeRule() {
		return getMobaSettingsAttributeAccess().getRule();
	}
	
	//fragment MobaMultiplicityAble:
	//	multiplicity=MobaMuliplicity?;
	public MobaMultiplicityAbleElements getMobaMultiplicityAbleAccess() {
		return pMobaMultiplicityAble;
	}
	
	public ParserRule getMobaMultiplicityAbleRule() {
		return getMobaMultiplicityAbleAccess().getRule();
	}
	
	//MobaBeanReference:
	//	'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaBean] MobaMultiplicityAble
	//	name=ID
	//	MobaPropertiesAble?;
	public MobaBeanReferenceElements getMobaBeanReferenceAccess() {
		return pMobaBeanReference;
	}
	
	public ParserRule getMobaBeanReferenceRule() {
		return getMobaBeanReferenceAccess().getRule();
	}
	
	//MobaPayloadFeature:
	//	MobaPayloadAttribute | MobaPayloadReference;
	public MobaPayloadFeatureElements getMobaPayloadFeatureAccess() {
		return pMobaPayloadFeature;
	}
	
	public ParserRule getMobaPayloadFeatureRule() {
		return getMobaPayloadFeatureAccess().getRule();
	}
	
	//MobaPayloadAttribute:
	//	'var' (lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? &
	//	('constraints' '(' constraints+=MobaConstraint (','
	//	constraints+=MobaConstraint)* ')')? & ('alias' '(' alias=ID ')')?) type=[MobaDataType] MobaMultiplicityAble name=ID
	//	MobaPropertiesAble?;
	public MobaPayloadAttributeElements getMobaPayloadAttributeAccess() {
		return pMobaPayloadAttribute;
	}
	
	public ParserRule getMobaPayloadAttributeRule() {
		return getMobaPayloadAttributeAccess().getRule();
	}
	
	//MobaPayloadReference:
	//	'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaPayload] MobaMultiplicityAble
	//	name=ID
	//	MobaPropertiesAble?;
	public MobaPayloadReferenceElements getMobaPayloadReferenceAccess() {
		return pMobaPayloadReference;
	}
	
	public ParserRule getMobaPayloadReferenceRule() {
		return getMobaPayloadReferenceAccess().getRule();
	}
	
	//MobaQueueFeature:
	//	MobaQueueReference;
	public MobaQueueFeatureElements getMobaQueueFeatureAccess() {
		return pMobaQueueFeature;
	}
	
	public ParserRule getMobaQueueFeatureRule() {
		return getMobaQueueFeatureAccess().getRule();
	}
	
	//MobaQueueReference:
	//	'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaData] MobaMultiplicityAble
	//	name=ID
	//	MobaPropertiesAble?;
	public MobaQueueReferenceElements getMobaQueueReferenceAccess() {
		return pMobaQueueReference;
	}
	
	public ParserRule getMobaQueueReferenceRule() {
		return getMobaQueueReferenceAccess().getRule();
	}
	
	//MobaMuliplicity:
	//	'[' lower=MobaLowerBound ('..' upper=MobaUpperBound)? ']';
	public MobaMuliplicityElements getMobaMuliplicityAccess() {
		return pMobaMuliplicity;
	}
	
	public ParserRule getMobaMuliplicityRule() {
		return getMobaMuliplicityAccess().getRule();
	}
	
	//MobaConstraint:
	//	MobaRegexpConstraint | MobaMinConstraint | MobaMaxConstraint | MobaMinLengthConstraint | MobaMaxLengthConstraint |
	//	MobaDigitsConstraint | MobaNullConstraint | MobaNotNullConstraint;
	public MobaConstraintElements getMobaConstraintAccess() {
		return pMobaConstraint;
	}
	
	public ParserRule getMobaConstraintRule() {
		return getMobaConstraintAccess().getRule();
	}
	
	//MobaRegexpConstraint:
	//	'regexp' '=' (filterString=STRING | filterConst=[MobaConstant]);
	public MobaRegexpConstraintElements getMobaRegexpConstraintAccess() {
		return pMobaRegexpConstraint;
	}
	
	public ParserRule getMobaRegexpConstraintRule() {
		return getMobaRegexpConstraintAccess().getRule();
	}
	
	//MobaMinConstraint:
	//	'min' '=' (filterValue=DOUBLE | filterConst=[MobaConstant]);
	public MobaMinConstraintElements getMobaMinConstraintAccess() {
		return pMobaMinConstraint;
	}
	
	public ParserRule getMobaMinConstraintRule() {
		return getMobaMinConstraintAccess().getRule();
	}
	
	//MobaMaxConstraint:
	//	'max' '=' (filterValue=DOUBLE | filterConst=[MobaConstant]);
	public MobaMaxConstraintElements getMobaMaxConstraintAccess() {
		return pMobaMaxConstraint;
	}
	
	public ParserRule getMobaMaxConstraintRule() {
		return getMobaMaxConstraintAccess().getRule();
	}
	
	//MobaMinLengthConstraint:
	//	'minLength' '=' (filterValue=INT | filterConst=[MobaConstant]);
	public MobaMinLengthConstraintElements getMobaMinLengthConstraintAccess() {
		return pMobaMinLengthConstraint;
	}
	
	public ParserRule getMobaMinLengthConstraintRule() {
		return getMobaMinLengthConstraintAccess().getRule();
	}
	
	//MobaMaxLengthConstraint:
	//	'maxLength' '=' (filterValue=INT | filterConst=[MobaConstant]);
	public MobaMaxLengthConstraintElements getMobaMaxLengthConstraintAccess() {
		return pMobaMaxLengthConstraint;
	}
	
	public ParserRule getMobaMaxLengthConstraintRule() {
		return getMobaMaxLengthConstraintAccess().getRule();
	}
	
	//MobaDigitsConstraint:
	//	'digits' '(' (filterIntegerValue=INT | filterIntegerConst=[MobaConstant]) ',' (filterFractionValue=INT |
	//	filterFractionConst=[MobaConstant]) ')';
	public MobaDigitsConstraintElements getMobaDigitsConstraintAccess() {
		return pMobaDigitsConstraint;
	}
	
	public ParserRule getMobaDigitsConstraintRule() {
		return getMobaDigitsConstraintAccess().getRule();
	}
	
	//MobaNullConstraint:
	//	{MobaNullConstraint}
	//	'isNull';
	public MobaNullConstraintElements getMobaNullConstraintAccess() {
		return pMobaNullConstraint;
	}
	
	public ParserRule getMobaNullConstraintRule() {
		return getMobaNullConstraintAccess().getRule();
	}
	
	//MobaNotNullConstraint:
	//	{MobaNotNullConstraint}
	//	'isNotNull';
	public MobaNotNullConstraintElements getMobaNotNullConstraintAccess() {
		return pMobaNotNullConstraint;
	}
	
	public ParserRule getMobaNotNullConstraintRule() {
		return getMobaNotNullConstraintAccess().getRule();
	}
	
	//enum MobaLowerBound:
	//	MANY='*' | ZERO='0' | OPTIONAL='?' | ATLEASTONE='+' | ONE='1';
	public MobaLowerBoundElements getMobaLowerBoundAccess() {
		return eMobaLowerBound;
	}
	
	public EnumRule getMobaLowerBoundRule() {
		return getMobaLowerBoundAccess().getRule();
	}
	
	//enum MobaUpperBound:
	//	MANY='*' | ONE='1';
	public MobaUpperBoundElements getMobaUpperBoundAccess() {
		return eMobaUpperBound;
	}
	
	public EnumRule getMobaUpperBoundRule() {
		return getMobaUpperBoundAccess().getRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	super::INT;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//terminal DOWNLOAD_TEMPLATE:
	//	'...index:' ('a'..'z' | 'A'..'Z' | '_' | ':' | '.') ('a'..'z' | 'A'..'Z' | '_' | ':' | '.' | '0'..'9')*;
	public TerminalRule getDOWNLOAD_TEMPLATERule() {
		return tDOWNLOAD_TEMPLATE;
	}
	
	//terminal DOUBLE returns ecore::EDouble:
	//	('+' | '-')? INT ('.' INT)?;
	public TerminalRule getDOUBLERule() {
		return tDOUBLE;
	}
	
	//terminal FLOAT returns ecore::EFloat:
	//	INT (('e' | 'E') ('+' | '-')? INT)? (('b' | 'B') ('i' | 'I' | 'd' | 'D') | ('l' | 'L' | 'd' | 'D' | 'f' | 'F'))?;
	public TerminalRule getFLOATRule() {
		return tFLOAT;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getTerminalsINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
