/*
 * generated by Xtext 2.9.0.beta6
 */
package org.mobadsl.grammar.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MobaGrammarAccess extends AbstractGrammarElementFinder {
	
	public class MobaApplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaApplication");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApplicationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFeaturesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFeaturesMobaApplicationFeatureParserRuleCall_3_0 = (RuleCall)cFeaturesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MobaApplication:
		//	'application' name=ID '{'
		//	features+=MobaApplicationFeature* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'application' name=ID '{' features+=MobaApplicationFeature* '}'
		public Group getGroup() { return cGroup; }
		
		//'application'
		public Keyword getApplicationKeyword_0() { return cApplicationKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//features+=MobaApplicationFeature*
		public Assignment getFeaturesAssignment_3() { return cFeaturesAssignment_3; }
		
		//MobaApplicationFeature
		public RuleCall getFeaturesMobaApplicationFeatureParserRuleCall_3_0() { return cFeaturesMobaApplicationFeatureParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class MobaApplicationFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaApplicationFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMobaDataTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMobaTemplateParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMobaConstantParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMobaSettingsParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cMobaDataParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cMobaServiceParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cMobaGeneratorParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//MobaApplicationFeature:
		//	MobaDataType | MobaTemplate | MobaConstant | MobaSettings | MobaData | MobaService | MobaGenerator;
		@Override public ParserRule getRule() { return rule; }
		
		//MobaDataType | MobaTemplate | MobaConstant | MobaSettings | MobaData | MobaService | MobaGenerator
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MobaDataType
		public RuleCall getMobaDataTypeParserRuleCall_0() { return cMobaDataTypeParserRuleCall_0; }
		
		//MobaTemplate
		public RuleCall getMobaTemplateParserRuleCall_1() { return cMobaTemplateParserRuleCall_1; }
		
		//MobaConstant
		public RuleCall getMobaConstantParserRuleCall_2() { return cMobaConstantParserRuleCall_2; }
		
		//MobaSettings
		public RuleCall getMobaSettingsParserRuleCall_3() { return cMobaSettingsParserRuleCall_3; }
		
		//MobaData
		public RuleCall getMobaDataParserRuleCall_4() { return cMobaDataParserRuleCall_4; }
		
		//MobaService
		public RuleCall getMobaServiceParserRuleCall_5() { return cMobaServiceParserRuleCall_5; }
		
		//MobaGenerator
		public RuleCall getMobaGeneratorParserRuleCall_6() { return cMobaGeneratorParserRuleCall_6; }
	}
	public class MobaTemplateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaTemplate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUseTemplateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTemplateAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTemplateMobaApplicationCrossReference_1_0 = (CrossReference)cTemplateAssignment_1.eContents().get(0);
		private final RuleCall cTemplateMobaApplicationIDTerminalRuleCall_1_0_1 = (RuleCall)cTemplateMobaApplicationCrossReference_1_0.eContents().get(1);
		
		/// **
		// * Will import a Moba-Application.
		// * / MobaTemplate:
		//	'use template' template=[MobaApplication];
		@Override public ParserRule getRule() { return rule; }
		
		//'use template' template=[MobaApplication]
		public Group getGroup() { return cGroup; }
		
		//'use template'
		public Keyword getUseTemplateKeyword_0() { return cUseTemplateKeyword_0; }
		
		//template=[MobaApplication]
		public Assignment getTemplateAssignment_1() { return cTemplateAssignment_1; }
		
		//[MobaApplication]
		public CrossReference getTemplateMobaApplicationCrossReference_1_0() { return cTemplateMobaApplicationCrossReference_1_0; }
		
		//ID
		public RuleCall getTemplateMobaApplicationIDTerminalRuleCall_1_0_1() { return cTemplateMobaApplicationIDTerminalRuleCall_1_0_1; }
	}
	public class MobaGeneratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaGenerator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUseGeneratorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cGeneratorStringAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cGeneratorStringSTRINGTerminalRuleCall_1_0_0 = (RuleCall)cGeneratorStringAssignment_1_0.eContents().get(0);
		private final Assignment cGeneratorConstAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final CrossReference cGeneratorConstMobaConstantCrossReference_1_1_0 = (CrossReference)cGeneratorConstAssignment_1_1.eContents().get(0);
		private final RuleCall cGeneratorConstMobaConstantIDTerminalRuleCall_1_1_0_1 = (RuleCall)cGeneratorConstMobaConstantCrossReference_1_1_0.eContents().get(1);
		
		//MobaGenerator:
		//	'use generator' (generatorString=STRING | generatorConst=[MobaConstant]);
		@Override public ParserRule getRule() { return rule; }
		
		//'use generator' (generatorString=STRING | generatorConst=[MobaConstant])
		public Group getGroup() { return cGroup; }
		
		//'use generator'
		public Keyword getUseGeneratorKeyword_0() { return cUseGeneratorKeyword_0; }
		
		//(generatorString=STRING | generatorConst=[MobaConstant])
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//generatorString=STRING
		public Assignment getGeneratorStringAssignment_1_0() { return cGeneratorStringAssignment_1_0; }
		
		//STRING
		public RuleCall getGeneratorStringSTRINGTerminalRuleCall_1_0_0() { return cGeneratorStringSTRINGTerminalRuleCall_1_0_0; }
		
		//generatorConst=[MobaConstant]
		public Assignment getGeneratorConstAssignment_1_1() { return cGeneratorConstAssignment_1_1; }
		
		//[MobaConstant]
		public CrossReference getGeneratorConstMobaConstantCrossReference_1_1_0() { return cGeneratorConstMobaConstantCrossReference_1_1_0; }
		
		//ID
		public RuleCall getGeneratorConstMobaConstantIDTerminalRuleCall_1_1_0_1() { return cGeneratorConstMobaConstantIDTerminalRuleCall_1_1_0_1; }
	}
	public class MobaDataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaDataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDatatypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Assignment cPrimitiveAssignment_2_0 = (Assignment)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cPrimitiveIsPrimitiveKeyword_2_0_0 = (Keyword)cPrimitiveAssignment_2_0.eContents().get(0);
		private final Assignment cArrayAssignment_2_1 = (Assignment)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cArrayIsArrayKeyword_2_1_0 = (Keyword)cArrayAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Alternatives cAlternatives_2_2_0 = (Alternatives)cGroup_2_2.eContents().get(0);
		private final Assignment cDateAssignment_2_2_0_0 = (Assignment)cAlternatives_2_2_0.eContents().get(0);
		private final Keyword cDateIsDateKeyword_2_2_0_0_0 = (Keyword)cDateAssignment_2_2_0_0.eContents().get(0);
		private final Assignment cDateAssignment_2_2_0_1 = (Assignment)cAlternatives_2_2_0.eContents().get(1);
		private final Keyword cDateIsTimeKeyword_2_2_0_1_0 = (Keyword)cDateAssignment_2_2_0_1.eContents().get(0);
		private final Assignment cDateAssignment_2_2_0_2 = (Assignment)cAlternatives_2_2_0.eContents().get(2);
		private final Keyword cDateIsTimestampKeyword_2_2_0_2_0 = (Keyword)cDateAssignment_2_2_0_2.eContents().get(0);
		private final Group cGroup_2_2_1 = (Group)cGroup_2_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2_2_1_0 = (Keyword)cGroup_2_2_1.eContents().get(0);
		private final Alternatives cAlternatives_2_2_1_1 = (Alternatives)cGroup_2_2_1.eContents().get(1);
		private final Assignment cDateFormatStringAssignment_2_2_1_1_0 = (Assignment)cAlternatives_2_2_1_1.eContents().get(0);
		private final RuleCall cDateFormatStringSTRINGTerminalRuleCall_2_2_1_1_0_0 = (RuleCall)cDateFormatStringAssignment_2_2_1_1_0.eContents().get(0);
		private final Assignment cDateFormatConstantAssignment_2_2_1_1_1 = (Assignment)cAlternatives_2_2_1_1.eContents().get(1);
		private final CrossReference cDateFormatConstantMobaConstantCrossReference_2_2_1_1_1_0 = (CrossReference)cDateFormatConstantAssignment_2_2_1_1_1.eContents().get(0);
		private final RuleCall cDateFormatConstantMobaConstantIDTerminalRuleCall_2_2_1_1_1_0_1 = (RuleCall)cDateFormatConstantMobaConstantCrossReference_2_2_1_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_2_1_2 = (Keyword)cGroup_2_2_1.eContents().get(2);
		private final RuleCall cMobaPropertiesParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//MobaDataType:
		//	'datatype' name=ID (primitive?='isPrimitive'? & array?='isArray'? & ((date?='isDate' | date?='isTime' |
		//	date?='isTimestamp') ('(' (dateFormatString=STRING | dateFormatConstant=[MobaConstant]) ')')?)?) MobaProperties?;
		@Override public ParserRule getRule() { return rule; }
		
		//'datatype' name=ID (primitive?='isPrimitive'? & array?='isArray'? & ((date?='isDate' | date?='isTime' |
		//date?='isTimestamp') ('(' (dateFormatString=STRING | dateFormatConstant=[MobaConstant]) ')')?)?) MobaProperties?
		public Group getGroup() { return cGroup; }
		
		//'datatype'
		public Keyword getDatatypeKeyword_0() { return cDatatypeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(primitive?='isPrimitive'? & array?='isArray'? & ((date?='isDate' | date?='isTime' | date?='isTimestamp') ('('
		//(dateFormatString=STRING | dateFormatConstant=[MobaConstant]) ')')?)?)
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//primitive?='isPrimitive'?
		public Assignment getPrimitiveAssignment_2_0() { return cPrimitiveAssignment_2_0; }
		
		//'isPrimitive'
		public Keyword getPrimitiveIsPrimitiveKeyword_2_0_0() { return cPrimitiveIsPrimitiveKeyword_2_0_0; }
		
		//array?='isArray'?
		public Assignment getArrayAssignment_2_1() { return cArrayAssignment_2_1; }
		
		//'isArray'
		public Keyword getArrayIsArrayKeyword_2_1_0() { return cArrayIsArrayKeyword_2_1_0; }
		
		//((date?='isDate' | date?='isTime' | date?='isTimestamp') ('(' (dateFormatString=STRING |
		//dateFormatConstant=[MobaConstant]) ')')?)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//(date?='isDate' | date?='isTime' | date?='isTimestamp')
		public Alternatives getAlternatives_2_2_0() { return cAlternatives_2_2_0; }
		
		//date?='isDate'
		public Assignment getDateAssignment_2_2_0_0() { return cDateAssignment_2_2_0_0; }
		
		//'isDate'
		public Keyword getDateIsDateKeyword_2_2_0_0_0() { return cDateIsDateKeyword_2_2_0_0_0; }
		
		//date?='isTime'
		public Assignment getDateAssignment_2_2_0_1() { return cDateAssignment_2_2_0_1; }
		
		//'isTime'
		public Keyword getDateIsTimeKeyword_2_2_0_1_0() { return cDateIsTimeKeyword_2_2_0_1_0; }
		
		//date?='isTimestamp'
		public Assignment getDateAssignment_2_2_0_2() { return cDateAssignment_2_2_0_2; }
		
		//'isTimestamp'
		public Keyword getDateIsTimestampKeyword_2_2_0_2_0() { return cDateIsTimestampKeyword_2_2_0_2_0; }
		
		//('(' (dateFormatString=STRING | dateFormatConstant=[MobaConstant]) ')')?
		public Group getGroup_2_2_1() { return cGroup_2_2_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_2_1_0() { return cLeftParenthesisKeyword_2_2_1_0; }
		
		//(dateFormatString=STRING | dateFormatConstant=[MobaConstant])
		public Alternatives getAlternatives_2_2_1_1() { return cAlternatives_2_2_1_1; }
		
		//dateFormatString=STRING
		public Assignment getDateFormatStringAssignment_2_2_1_1_0() { return cDateFormatStringAssignment_2_2_1_1_0; }
		
		//STRING
		public RuleCall getDateFormatStringSTRINGTerminalRuleCall_2_2_1_1_0_0() { return cDateFormatStringSTRINGTerminalRuleCall_2_2_1_1_0_0; }
		
		//dateFormatConstant=[MobaConstant]
		public Assignment getDateFormatConstantAssignment_2_2_1_1_1() { return cDateFormatConstantAssignment_2_2_1_1_1; }
		
		//[MobaConstant]
		public CrossReference getDateFormatConstantMobaConstantCrossReference_2_2_1_1_1_0() { return cDateFormatConstantMobaConstantCrossReference_2_2_1_1_1_0; }
		
		//ID
		public RuleCall getDateFormatConstantMobaConstantIDTerminalRuleCall_2_2_1_1_1_0_1() { return cDateFormatConstantMobaConstantIDTerminalRuleCall_2_2_1_1_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2_1_2() { return cRightParenthesisKeyword_2_2_1_2; }
		
		//MobaProperties?
		public RuleCall getMobaPropertiesParserRuleCall_3() { return cMobaPropertiesParserRuleCall_3; }
	}
	public class MobaConstantElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaConstant");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConstKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final RuleCall cMobaPropertiesParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//MobaConstant:
		//	'const' name=ID '=' value=STRING MobaProperties?;
		@Override public ParserRule getRule() { return rule; }
		
		//'const' name=ID '=' value=STRING MobaProperties?
		public Group getGroup() { return cGroup; }
		
		//'const'
		public Keyword getConstKeyword_0() { return cConstKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//value=STRING
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_0() { return cValueSTRINGTerminalRuleCall_3_0; }
		
		//MobaProperties?
		public RuleCall getMobaPropertiesParserRuleCall_4() { return cMobaPropertiesParserRuleCall_4; }
	}
	public class MobaPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPropertiesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPropertiesMobaPropertyParserRuleCall_1_0 = (RuleCall)cPropertiesAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPropertiesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPropertiesMobaPropertyParserRuleCall_2_1_0 = (RuleCall)cPropertiesAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//fragment MobaProperties:
		//	'[' properties+=MobaProperty (',' properties+=MobaProperty)* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'[' properties+=MobaProperty (',' properties+=MobaProperty)* ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//properties+=MobaProperty
		public Assignment getPropertiesAssignment_1() { return cPropertiesAssignment_1; }
		
		//MobaProperty
		public RuleCall getPropertiesMobaPropertyParserRuleCall_1_0() { return cPropertiesMobaPropertyParserRuleCall_1_0; }
		
		//(',' properties+=MobaProperty)*
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//properties+=MobaProperty
		public Assignment getPropertiesAssignment_2_1() { return cPropertiesAssignment_2_1; }
		
		//MobaProperty
		public RuleCall getPropertiesMobaPropertyParserRuleCall_2_1_0() { return cPropertiesMobaPropertyParserRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class MobaPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cKeyStringAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cKeyStringSTRINGTerminalRuleCall_0_0_0 = (RuleCall)cKeyStringAssignment_0_0.eContents().get(0);
		private final Assignment cKeyConstAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final CrossReference cKeyConstMobaConstantCrossReference_0_1_0 = (CrossReference)cKeyConstAssignment_0_1.eContents().get(0);
		private final RuleCall cKeyConstMobaConstantIDTerminalRuleCall_0_1_0_1 = (RuleCall)cKeyConstMobaConstantCrossReference_0_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cValueStringAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cValueStringSTRINGTerminalRuleCall_2_0_0 = (RuleCall)cValueStringAssignment_2_0.eContents().get(0);
		private final Assignment cValueConstAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final CrossReference cValueConstMobaConstantCrossReference_2_1_0 = (CrossReference)cValueConstAssignment_2_1.eContents().get(0);
		private final RuleCall cValueConstMobaConstantIDTerminalRuleCall_2_1_0_1 = (RuleCall)cValueConstMobaConstantCrossReference_2_1_0.eContents().get(1);
		
		//MobaProperty:
		//	(keyString=STRING | keyConst=[MobaConstant]) '=' (valueString=STRING | valueConst=[MobaConstant]);
		@Override public ParserRule getRule() { return rule; }
		
		//(keyString=STRING | keyConst=[MobaConstant]) '=' (valueString=STRING | valueConst=[MobaConstant])
		public Group getGroup() { return cGroup; }
		
		//(keyString=STRING | keyConst=[MobaConstant])
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//keyString=STRING
		public Assignment getKeyStringAssignment_0_0() { return cKeyStringAssignment_0_0; }
		
		//STRING
		public RuleCall getKeyStringSTRINGTerminalRuleCall_0_0_0() { return cKeyStringSTRINGTerminalRuleCall_0_0_0; }
		
		//keyConst=[MobaConstant]
		public Assignment getKeyConstAssignment_0_1() { return cKeyConstAssignment_0_1; }
		
		//[MobaConstant]
		public CrossReference getKeyConstMobaConstantCrossReference_0_1_0() { return cKeyConstMobaConstantCrossReference_0_1_0; }
		
		//ID
		public RuleCall getKeyConstMobaConstantIDTerminalRuleCall_0_1_0_1() { return cKeyConstMobaConstantIDTerminalRuleCall_0_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//(valueString=STRING | valueConst=[MobaConstant])
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//valueString=STRING
		public Assignment getValueStringAssignment_2_0() { return cValueStringAssignment_2_0; }
		
		//STRING
		public RuleCall getValueStringSTRINGTerminalRuleCall_2_0_0() { return cValueStringSTRINGTerminalRuleCall_2_0_0; }
		
		//valueConst=[MobaConstant]
		public Assignment getValueConstAssignment_2_1() { return cValueConstAssignment_2_1; }
		
		//[MobaConstant]
		public CrossReference getValueConstMobaConstantCrossReference_2_1_0() { return cValueConstMobaConstantCrossReference_2_1_0; }
		
		//ID
		public RuleCall getValueConstMobaConstantIDTerminalRuleCall_2_1_0_1() { return cValueConstMobaConstantIDTerminalRuleCall_2_1_0_1; }
	}
	public class MobaDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaData");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMobaDtoParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMobaPayloadParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMobaQueueParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//MobaData:
		//	MobaDto | MobaPayload | MobaQueue;
		@Override public ParserRule getRule() { return rule; }
		
		//MobaDto | MobaPayload | MobaQueue
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MobaDto
		public RuleCall getMobaDtoParserRuleCall_0() { return cMobaDtoParserRuleCall_0; }
		
		//MobaPayload
		public RuleCall getMobaPayloadParserRuleCall_1() { return cMobaPayloadParserRuleCall_1; }
		
		//MobaQueue
		public RuleCall getMobaQueueParserRuleCall_2() { return cMobaQueueParserRuleCall_2; }
	}
	public class MobaSettingsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaSettings");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMobaSettingsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSettingsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperTypeMobaSettingsCrossReference_2_1_0 = (CrossReference)cSuperTypeAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperTypeMobaSettingsIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSuperTypeMobaSettingsCrossReference_2_1_0.eContents().get(1);
		private final RuleCall cMobaPropertiesParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//MobaSettings:
		//	{MobaSettings}
		//	'settings' ('extends' superType=[MobaSettings])? MobaProperties?;
		@Override public ParserRule getRule() { return rule; }
		
		//{MobaSettings} 'settings' ('extends' superType=[MobaSettings])? MobaProperties?
		public Group getGroup() { return cGroup; }
		
		//{MobaSettings}
		public Action getMobaSettingsAction_0() { return cMobaSettingsAction_0; }
		
		//'settings'
		public Keyword getSettingsKeyword_1() { return cSettingsKeyword_1; }
		
		//('extends' superType=[MobaSettings])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }
		
		//superType=[MobaSettings]
		public Assignment getSuperTypeAssignment_2_1() { return cSuperTypeAssignment_2_1; }
		
		//[MobaSettings]
		public CrossReference getSuperTypeMobaSettingsCrossReference_2_1_0() { return cSuperTypeMobaSettingsCrossReference_2_1_0; }
		
		//ID
		public RuleCall getSuperTypeMobaSettingsIDTerminalRuleCall_2_1_0_1() { return cSuperTypeMobaSettingsIDTerminalRuleCall_2_1_0_1; }
		
		//MobaProperties?
		public RuleCall getMobaPropertiesParserRuleCall_3() { return cMobaPropertiesParserRuleCall_3; }
	}
	public class MobaCacheElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaCache");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMobaCacheAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCacheKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_1 = (UnorderedGroup)cGroup_2.eContents().get(1);
		private final Group cGroup_2_1_0 = (Group)cUnorderedGroup_2_1.eContents().get(0);
		private final Keyword cTypeKeyword_2_1_0_0 = (Keyword)cGroup_2_1_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1_0_1 = (Keyword)cGroup_2_1_0.eContents().get(1);
		private final Alternatives cAlternatives_2_1_0_2 = (Alternatives)cGroup_2_1_0.eContents().get(2);
		private final Assignment cCacheTypeStringAssignment_2_1_0_2_0 = (Assignment)cAlternatives_2_1_0_2.eContents().get(0);
		private final RuleCall cCacheTypeStringSTRINGTerminalRuleCall_2_1_0_2_0_0 = (RuleCall)cCacheTypeStringAssignment_2_1_0_2_0.eContents().get(0);
		private final Assignment cCacheTypeConstAssignment_2_1_0_2_1 = (Assignment)cAlternatives_2_1_0_2.eContents().get(1);
		private final CrossReference cCacheTypeConstMobaConstantCrossReference_2_1_0_2_1_0 = (CrossReference)cCacheTypeConstAssignment_2_1_0_2_1.eContents().get(0);
		private final RuleCall cCacheTypeConstMobaConstantIDTerminalRuleCall_2_1_0_2_1_0_1 = (RuleCall)cCacheTypeConstMobaConstantCrossReference_2_1_0_2_1_0.eContents().get(1);
		private final Group cGroup_2_1_1 = (Group)cUnorderedGroup_2_1.eContents().get(1);
		private final Keyword cStrategyKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1_1_1 = (Keyword)cGroup_2_1_1.eContents().get(1);
		private final Alternatives cAlternatives_2_1_1_2 = (Alternatives)cGroup_2_1_1.eContents().get(2);
		private final Assignment cCacheStrategyStringAssignment_2_1_1_2_0 = (Assignment)cAlternatives_2_1_1_2.eContents().get(0);
		private final RuleCall cCacheStrategyStringSTRINGTerminalRuleCall_2_1_1_2_0_0 = (RuleCall)cCacheStrategyStringAssignment_2_1_1_2_0.eContents().get(0);
		private final Assignment cCacheStrategyConstAssignment_2_1_1_2_1 = (Assignment)cAlternatives_2_1_1_2.eContents().get(1);
		private final CrossReference cCacheStrategyConstMobaConstantCrossReference_2_1_1_2_1_0 = (CrossReference)cCacheStrategyConstAssignment_2_1_1_2_1.eContents().get(0);
		private final RuleCall cCacheStrategyConstMobaConstantIDTerminalRuleCall_2_1_1_2_1_0_1 = (RuleCall)cCacheStrategyConstMobaConstantCrossReference_2_1_1_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//MobaCache:
		//	{MobaCache}
		//	'cache' ('(' (('type' '=' (cacheTypeString=STRING | cacheTypeConst=[MobaConstant]))?
		//	// strategy
		//	& ('strategy' '=' (cacheStrategyString=STRING | cacheStrategyConst=[MobaConstant]))?) ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{MobaCache} 'cache' ('(' (('type' '=' (cacheTypeString=STRING | cacheTypeConst=[MobaConstant]))? // strategy
		//& ('strategy' '=' (cacheStrategyString=STRING | cacheStrategyConst=[MobaConstant]))?) ')')?
		public Group getGroup() { return cGroup; }
		
		//{MobaCache}
		public Action getMobaCacheAction_0() { return cMobaCacheAction_0; }
		
		//'cache'
		public Keyword getCacheKeyword_1() { return cCacheKeyword_1; }
		
		//('(' (('type' '=' (cacheTypeString=STRING | cacheTypeConst=[MobaConstant]))? // strategy
		//& ('strategy' '=' (cacheStrategyString=STRING | cacheStrategyConst=[MobaConstant]))?) ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//(('type' '=' (cacheTypeString=STRING | cacheTypeConst=[MobaConstant]))? // strategy
		//& ('strategy' '=' (cacheStrategyString=STRING | cacheStrategyConst=[MobaConstant]))?)
		public UnorderedGroup getUnorderedGroup_2_1() { return cUnorderedGroup_2_1; }
		
		//('type' '=' (cacheTypeString=STRING | cacheTypeConst=[MobaConstant]))?
		public Group getGroup_2_1_0() { return cGroup_2_1_0; }
		
		//'type'
		public Keyword getTypeKeyword_2_1_0_0() { return cTypeKeyword_2_1_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_1_0_1() { return cEqualsSignKeyword_2_1_0_1; }
		
		//(cacheTypeString=STRING | cacheTypeConst=[MobaConstant])
		public Alternatives getAlternatives_2_1_0_2() { return cAlternatives_2_1_0_2; }
		
		//cacheTypeString=STRING
		public Assignment getCacheTypeStringAssignment_2_1_0_2_0() { return cCacheTypeStringAssignment_2_1_0_2_0; }
		
		//STRING
		public RuleCall getCacheTypeStringSTRINGTerminalRuleCall_2_1_0_2_0_0() { return cCacheTypeStringSTRINGTerminalRuleCall_2_1_0_2_0_0; }
		
		//cacheTypeConst=[MobaConstant]
		public Assignment getCacheTypeConstAssignment_2_1_0_2_1() { return cCacheTypeConstAssignment_2_1_0_2_1; }
		
		//[MobaConstant]
		public CrossReference getCacheTypeConstMobaConstantCrossReference_2_1_0_2_1_0() { return cCacheTypeConstMobaConstantCrossReference_2_1_0_2_1_0; }
		
		//ID
		public RuleCall getCacheTypeConstMobaConstantIDTerminalRuleCall_2_1_0_2_1_0_1() { return cCacheTypeConstMobaConstantIDTerminalRuleCall_2_1_0_2_1_0_1; }
		
		//('strategy' '=' (cacheStrategyString=STRING | cacheStrategyConst=[MobaConstant]))?
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }
		
		//'strategy'
		public Keyword getStrategyKeyword_2_1_1_0() { return cStrategyKeyword_2_1_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_1_1_1() { return cEqualsSignKeyword_2_1_1_1; }
		
		//(cacheStrategyString=STRING | cacheStrategyConst=[MobaConstant])
		public Alternatives getAlternatives_2_1_1_2() { return cAlternatives_2_1_1_2; }
		
		//cacheStrategyString=STRING
		public Assignment getCacheStrategyStringAssignment_2_1_1_2_0() { return cCacheStrategyStringAssignment_2_1_1_2_0; }
		
		//STRING
		public RuleCall getCacheStrategyStringSTRINGTerminalRuleCall_2_1_1_2_0_0() { return cCacheStrategyStringSTRINGTerminalRuleCall_2_1_1_2_0_0; }
		
		//cacheStrategyConst=[MobaConstant]
		public Assignment getCacheStrategyConstAssignment_2_1_1_2_1() { return cCacheStrategyConstAssignment_2_1_1_2_1; }
		
		//[MobaConstant]
		public CrossReference getCacheStrategyConstMobaConstantCrossReference_2_1_1_2_1_0() { return cCacheStrategyConstMobaConstantCrossReference_2_1_1_2_1_0; }
		
		//ID
		public RuleCall getCacheStrategyConstMobaConstantIDTerminalRuleCall_2_1_1_2_1_0_1() { return cCacheStrategyConstMobaConstantIDTerminalRuleCall_2_1_1_2_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }
	}
	public class MobaDtoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaDto");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDtoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cExtendsKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cSuperTypeAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final CrossReference cSuperTypeMobaDtoCrossReference_2_0_1_0 = (CrossReference)cSuperTypeAssignment_2_0_1.eContents().get(0);
		private final RuleCall cSuperTypeMobaDtoIDTerminalRuleCall_2_0_1_0_1 = (RuleCall)cSuperTypeMobaDtoCrossReference_2_0_1_0.eContents().get(1);
		private final Assignment cCacheAssignment_2_1 = (Assignment)cUnorderedGroup_2.eContents().get(1);
		private final RuleCall cCacheMobaCacheParserRuleCall_2_1_0 = (RuleCall)cCacheAssignment_2_1.eContents().get(0);
		private final RuleCall cMobaPropertiesParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFeaturesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFeaturesMobaDtoFeatureParserRuleCall_5_0 = (RuleCall)cFeaturesAssignment_5.eContents().get(0);
		private final Assignment cIndexAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cIndexMobaDtoIndexParserRuleCall_6_0 = (RuleCall)cIndexAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//MobaDto:
		//	'dto' name=ID (('extends' superType=[MobaDto])? & cache=MobaCache?) MobaProperties? '{' features+=MobaDtoFeature*
		//	index=MobaDtoIndex?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'dto' name=ID (('extends' superType=[MobaDto])? & cache=MobaCache?) MobaProperties? '{' features+=MobaDtoFeature*
		//index=MobaDtoIndex? '}'
		public Group getGroup() { return cGroup; }
		
		//'dto'
		public Keyword getDtoKeyword_0() { return cDtoKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(('extends' superType=[MobaDto])? & cache=MobaCache?)
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('extends' superType=[MobaDto])?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_0_0() { return cExtendsKeyword_2_0_0; }
		
		//superType=[MobaDto]
		public Assignment getSuperTypeAssignment_2_0_1() { return cSuperTypeAssignment_2_0_1; }
		
		//[MobaDto]
		public CrossReference getSuperTypeMobaDtoCrossReference_2_0_1_0() { return cSuperTypeMobaDtoCrossReference_2_0_1_0; }
		
		//ID
		public RuleCall getSuperTypeMobaDtoIDTerminalRuleCall_2_0_1_0_1() { return cSuperTypeMobaDtoIDTerminalRuleCall_2_0_1_0_1; }
		
		//cache=MobaCache?
		public Assignment getCacheAssignment_2_1() { return cCacheAssignment_2_1; }
		
		//MobaCache
		public RuleCall getCacheMobaCacheParserRuleCall_2_1_0() { return cCacheMobaCacheParserRuleCall_2_1_0; }
		
		//MobaProperties?
		public RuleCall getMobaPropertiesParserRuleCall_3() { return cMobaPropertiesParserRuleCall_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//features+=MobaDtoFeature*
		public Assignment getFeaturesAssignment_5() { return cFeaturesAssignment_5; }
		
		//MobaDtoFeature
		public RuleCall getFeaturesMobaDtoFeatureParserRuleCall_5_0() { return cFeaturesMobaDtoFeatureParserRuleCall_5_0; }
		
		//index=MobaDtoIndex?
		public Assignment getIndexAssignment_6() { return cIndexAssignment_6; }
		
		//MobaDtoIndex
		public RuleCall getIndexMobaDtoIndexParserRuleCall_6_0() { return cIndexMobaDtoIndexParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class MobaDtoIndexElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaDtoIndex");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIndexKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAttributesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAttributesMobaDtoAttributeCrossReference_1_0 = (CrossReference)cAttributesAssignment_1.eContents().get(0);
		private final RuleCall cAttributesMobaDtoAttributeIDTerminalRuleCall_1_0_1 = (RuleCall)cAttributesMobaDtoAttributeCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAttributesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cAttributesMobaDtoAttributeCrossReference_2_1_0 = (CrossReference)cAttributesAssignment_2_1.eContents().get(0);
		private final RuleCall cAttributesMobaDtoAttributeIDTerminalRuleCall_2_1_0_1 = (RuleCall)cAttributesMobaDtoAttributeCrossReference_2_1_0.eContents().get(1);
		
		//MobaDtoIndex:
		//	'index' attributes+=[MobaDtoAttribute] (',' attributes+=[MobaDtoAttribute]*);
		@Override public ParserRule getRule() { return rule; }
		
		//'index' attributes+=[MobaDtoAttribute] (',' attributes+=[MobaDtoAttribute]*)
		public Group getGroup() { return cGroup; }
		
		//'index'
		public Keyword getIndexKeyword_0() { return cIndexKeyword_0; }
		
		//attributes+=[MobaDtoAttribute]
		public Assignment getAttributesAssignment_1() { return cAttributesAssignment_1; }
		
		//[MobaDtoAttribute]
		public CrossReference getAttributesMobaDtoAttributeCrossReference_1_0() { return cAttributesMobaDtoAttributeCrossReference_1_0; }
		
		//ID
		public RuleCall getAttributesMobaDtoAttributeIDTerminalRuleCall_1_0_1() { return cAttributesMobaDtoAttributeIDTerminalRuleCall_1_0_1; }
		
		//(',' attributes+=[MobaDtoAttribute]*)
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//attributes+=[MobaDtoAttribute]*
		public Assignment getAttributesAssignment_2_1() { return cAttributesAssignment_2_1; }
		
		//[MobaDtoAttribute]
		public CrossReference getAttributesMobaDtoAttributeCrossReference_2_1_0() { return cAttributesMobaDtoAttributeCrossReference_2_1_0; }
		
		//ID
		public RuleCall getAttributesMobaDtoAttributeIDTerminalRuleCall_2_1_0_1() { return cAttributesMobaDtoAttributeIDTerminalRuleCall_2_1_0_1; }
	}
	public class MobaPayloadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaPayload");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPayloadKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperTypeMobaPayloadCrossReference_2_1_0 = (CrossReference)cSuperTypeAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperTypeMobaPayloadIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSuperTypeMobaPayloadCrossReference_2_1_0.eContents().get(1);
		private final RuleCall cMobaPropertiesParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFeaturesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFeaturesMobaPayloadFeatureParserRuleCall_5_0 = (RuleCall)cFeaturesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//MobaPayload:
		//	'payload' name=ID ('extends' superType=[MobaPayload])? MobaProperties? '{'
		//	features+=MobaPayloadFeature*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'payload' name=ID ('extends' superType=[MobaPayload])? MobaProperties? '{' features+=MobaPayloadFeature* '}'
		public Group getGroup() { return cGroup; }
		
		//'payload'
		public Keyword getPayloadKeyword_0() { return cPayloadKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('extends' superType=[MobaPayload])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }
		
		//superType=[MobaPayload]
		public Assignment getSuperTypeAssignment_2_1() { return cSuperTypeAssignment_2_1; }
		
		//[MobaPayload]
		public CrossReference getSuperTypeMobaPayloadCrossReference_2_1_0() { return cSuperTypeMobaPayloadCrossReference_2_1_0; }
		
		//ID
		public RuleCall getSuperTypeMobaPayloadIDTerminalRuleCall_2_1_0_1() { return cSuperTypeMobaPayloadIDTerminalRuleCall_2_1_0_1; }
		
		//MobaProperties?
		public RuleCall getMobaPropertiesParserRuleCall_3() { return cMobaPropertiesParserRuleCall_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//features+=MobaPayloadFeature*
		public Assignment getFeaturesAssignment_5() { return cFeaturesAssignment_5; }
		
		//MobaPayloadFeature
		public RuleCall getFeaturesMobaPayloadFeatureParserRuleCall_5_0() { return cFeaturesMobaPayloadFeatureParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class MobaQueueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaQueue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQueueKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperTypeMobaQueueCrossReference_2_1_0 = (CrossReference)cSuperTypeAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperTypeMobaQueueIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSuperTypeMobaQueueCrossReference_2_1_0.eContents().get(1);
		private final RuleCall cMobaPropertiesParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFeaturesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFeaturesMobaQueueFeatureParserRuleCall_5_0 = (RuleCall)cFeaturesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//MobaQueue:
		//	'queue' name=ID ('extends' superType=[MobaQueue])? MobaProperties? '{'
		//	features+=MobaQueueFeature*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'queue' name=ID ('extends' superType=[MobaQueue])? MobaProperties? '{' features+=MobaQueueFeature* '}'
		public Group getGroup() { return cGroup; }
		
		//'queue'
		public Keyword getQueueKeyword_0() { return cQueueKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('extends' superType=[MobaQueue])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }
		
		//superType=[MobaQueue]
		public Assignment getSuperTypeAssignment_2_1() { return cSuperTypeAssignment_2_1; }
		
		//[MobaQueue]
		public CrossReference getSuperTypeMobaQueueCrossReference_2_1_0() { return cSuperTypeMobaQueueCrossReference_2_1_0; }
		
		//ID
		public RuleCall getSuperTypeMobaQueueIDTerminalRuleCall_2_1_0_1() { return cSuperTypeMobaQueueIDTerminalRuleCall_2_1_0_1; }
		
		//MobaProperties?
		public RuleCall getMobaPropertiesParserRuleCall_3() { return cMobaPropertiesParserRuleCall_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//features+=MobaQueueFeature*
		public Assignment getFeaturesAssignment_5() { return cFeaturesAssignment_5; }
		
		//MobaQueueFeature
		public RuleCall getFeaturesMobaQueueFeatureParserRuleCall_5_0() { return cFeaturesMobaQueueFeatureParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class MobaServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaService");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMobaRestCustomParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMobaRestCrudParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MobaService:
		//	MobaRestCustom | MobaRestCrud;
		@Override public ParserRule getRule() { return rule; }
		
		//MobaRestCustom | MobaRestCrud
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MobaRestCustom
		public RuleCall getMobaRestCustomParserRuleCall_0() { return cMobaRestCustomParserRuleCall_0; }
		
		//MobaRestCrud
		public RuleCall getMobaRestCrudParserRuleCall_1() { return cMobaRestCrudParserRuleCall_1; }
	}
	public class MobaRestCustomElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaRestCustom");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRestKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final RuleCall cMobaPropertiesParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MobaRestCustom:
		//	'rest' name=ID MobaProperties?;
		@Override public ParserRule getRule() { return rule; }
		
		//'rest' name=ID MobaProperties?
		public Group getGroup() { return cGroup; }
		
		//'rest'
		public Keyword getRestKeyword_0() { return cRestKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//MobaProperties?
		public RuleCall getMobaPropertiesParserRuleCall_2() { return cMobaPropertiesParserRuleCall_2; }
	}
	public class MobaRestCrudElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaRestCrud");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRestCrudKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final RuleCall cMobaPropertiesParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MobaRestCrud:
		//	'restCrud' name=ID MobaProperties?;
		@Override public ParserRule getRule() { return rule; }
		
		//'restCrud' name=ID MobaProperties?
		public Group getGroup() { return cGroup; }
		
		//'restCrud'
		public Keyword getRestCrudKeyword_0() { return cRestCrudKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//MobaProperties?
		public RuleCall getMobaPropertiesParserRuleCall_2() { return cMobaPropertiesParserRuleCall_2; }
	}
	public class MobaDtoFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaDtoFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMobaDtoAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMobaDtoReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MobaDtoFeature:
		//	MobaDtoAttribute | MobaDtoReference;
		@Override public ParserRule getRule() { return rule; }
		
		//MobaDtoAttribute | MobaDtoReference
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MobaDtoAttribute
		public RuleCall getMobaDtoAttributeParserRuleCall_0() { return cMobaDtoAttributeParserRuleCall_0; }
		
		//MobaDtoReference
		public RuleCall getMobaDtoReferenceParserRuleCall_1() { return cMobaDtoReferenceParserRuleCall_1; }
	}
	public class MobaDtoAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaDtoAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cLazyAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cLazyLazyKeyword_1_0_0 = (Keyword)cLazyAssignment_1_0.eContents().get(0);
		private final Assignment cTransientAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cTransientTransientKeyword_1_1_0 = (Keyword)cTransientAssignment_1_1.eContents().get(0);
		private final Assignment cDomainKeyAssignment_1_2 = (Assignment)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cDomainKeyDomainKeyKeyword_1_2_0 = (Keyword)cDomainKeyAssignment_1_2.eContents().get(0);
		private final Assignment cDomainDescriptionAssignment_1_3 = (Assignment)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cDomainDescriptionDomainDescriptionKeyword_1_3_0 = (Keyword)cDomainDescriptionAssignment_1_3.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeMobaDataTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeMobaDataTypeIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeMobaDataTypeCrossReference_2_0.eContents().get(1);
		private final RuleCall cMobaMultiplicityProviderParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cMobaPropertiesParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//MobaDtoAttribute:
		//	'var' (lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'?)
		//	type=[MobaDataType] MobaMultiplicityProvider name=ID MobaProperties?;
		@Override public ParserRule getRule() { return rule; }
		
		//'var' (lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'?)
		//type=[MobaDataType] MobaMultiplicityProvider name=ID MobaProperties?
		public Group getGroup() { return cGroup; }
		
		//'var'
		public Keyword getVarKeyword_0() { return cVarKeyword_0; }
		
		//(lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//lazy?='lazy'?
		public Assignment getLazyAssignment_1_0() { return cLazyAssignment_1_0; }
		
		//'lazy'
		public Keyword getLazyLazyKeyword_1_0_0() { return cLazyLazyKeyword_1_0_0; }
		
		//transient?='transient'?
		public Assignment getTransientAssignment_1_1() { return cTransientAssignment_1_1; }
		
		//'transient'
		public Keyword getTransientTransientKeyword_1_1_0() { return cTransientTransientKeyword_1_1_0; }
		
		//domainKey?='domainKey'?
		public Assignment getDomainKeyAssignment_1_2() { return cDomainKeyAssignment_1_2; }
		
		//'domainKey'
		public Keyword getDomainKeyDomainKeyKeyword_1_2_0() { return cDomainKeyDomainKeyKeyword_1_2_0; }
		
		//domainDescription?='domainDescription'?
		public Assignment getDomainDescriptionAssignment_1_3() { return cDomainDescriptionAssignment_1_3; }
		
		//'domainDescription'
		public Keyword getDomainDescriptionDomainDescriptionKeyword_1_3_0() { return cDomainDescriptionDomainDescriptionKeyword_1_3_0; }
		
		//type=[MobaDataType]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[MobaDataType]
		public CrossReference getTypeMobaDataTypeCrossReference_2_0() { return cTypeMobaDataTypeCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeMobaDataTypeIDTerminalRuleCall_2_0_1() { return cTypeMobaDataTypeIDTerminalRuleCall_2_0_1; }
		
		//MobaMultiplicityProvider
		public RuleCall getMobaMultiplicityProviderParserRuleCall_3() { return cMobaMultiplicityProviderParserRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//MobaProperties?
		public RuleCall getMobaPropertiesParserRuleCall_5() { return cMobaPropertiesParserRuleCall_5; }
	}
	public class MobaMultiplicityProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaMultiplicityProvider");
		private final Assignment cMultiplicityAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cMultiplicityMobaMuliplicityParserRuleCall_0 = (RuleCall)cMultiplicityAssignment.eContents().get(0);
		
		//fragment MobaMultiplicityProvider:
		//	multiplicity=MobaMuliplicity?;
		@Override public ParserRule getRule() { return rule; }
		
		//multiplicity=MobaMuliplicity?
		public Assignment getMultiplicityAssignment() { return cMultiplicityAssignment; }
		
		//MobaMuliplicity
		public RuleCall getMultiplicityMobaMuliplicityParserRuleCall_0() { return cMultiplicityMobaMuliplicityParserRuleCall_0; }
	}
	public class MobaDtoReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaDtoReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cCascadingAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cCascadingCascadingKeyword_1_0_0 = (Keyword)cCascadingAssignment_1_0.eContents().get(0);
		private final Assignment cLazyAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cLazyLazyKeyword_1_1_0 = (Keyword)cLazyAssignment_1_1.eContents().get(0);
		private final Assignment cTransientAssignment_1_2 = (Assignment)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cTransientTransientKeyword_1_2_0 = (Keyword)cTransientAssignment_1_2.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeMobaDtoCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeMobaDtoIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeMobaDtoCrossReference_2_0.eContents().get(1);
		private final RuleCall cMobaMultiplicityProviderParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cMobaPropertiesParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//MobaDtoReference:
		//	'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaDto] MobaMultiplicityProvider
		//	name=ID
		//	MobaProperties?;
		@Override public ParserRule getRule() { return rule; }
		
		//'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaDto] MobaMultiplicityProvider
		//name=ID MobaProperties?
		public Group getGroup() { return cGroup; }
		
		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//(cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//cascading?='cascading'?
		public Assignment getCascadingAssignment_1_0() { return cCascadingAssignment_1_0; }
		
		//'cascading'
		public Keyword getCascadingCascadingKeyword_1_0_0() { return cCascadingCascadingKeyword_1_0_0; }
		
		//lazy?='lazy'?
		public Assignment getLazyAssignment_1_1() { return cLazyAssignment_1_1; }
		
		//'lazy'
		public Keyword getLazyLazyKeyword_1_1_0() { return cLazyLazyKeyword_1_1_0; }
		
		//transient?='transient'?
		public Assignment getTransientAssignment_1_2() { return cTransientAssignment_1_2; }
		
		//'transient'
		public Keyword getTransientTransientKeyword_1_2_0() { return cTransientTransientKeyword_1_2_0; }
		
		//type=[MobaDto]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[MobaDto]
		public CrossReference getTypeMobaDtoCrossReference_2_0() { return cTypeMobaDtoCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeMobaDtoIDTerminalRuleCall_2_0_1() { return cTypeMobaDtoIDTerminalRuleCall_2_0_1; }
		
		//MobaMultiplicityProvider
		public RuleCall getMobaMultiplicityProviderParserRuleCall_3() { return cMobaMultiplicityProviderParserRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//MobaProperties?
		public RuleCall getMobaPropertiesParserRuleCall_5() { return cMobaPropertiesParserRuleCall_5; }
	}
	public class MobaPayloadFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaPayloadFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMobaPayloadAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMobaPayloadReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MobaPayloadFeature:
		//	MobaPayloadAttribute | MobaPayloadReference;
		@Override public ParserRule getRule() { return rule; }
		
		//MobaPayloadAttribute | MobaPayloadReference
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MobaPayloadAttribute
		public RuleCall getMobaPayloadAttributeParserRuleCall_0() { return cMobaPayloadAttributeParserRuleCall_0; }
		
		//MobaPayloadReference
		public RuleCall getMobaPayloadReferenceParserRuleCall_1() { return cMobaPayloadReferenceParserRuleCall_1; }
	}
	public class MobaPayloadAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaPayloadAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cLazyAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cLazyLazyKeyword_1_0_0 = (Keyword)cLazyAssignment_1_0.eContents().get(0);
		private final Assignment cTransientAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cTransientTransientKeyword_1_1_0 = (Keyword)cTransientAssignment_1_1.eContents().get(0);
		private final Assignment cDomainKeyAssignment_1_2 = (Assignment)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cDomainKeyDomainKeyKeyword_1_2_0 = (Keyword)cDomainKeyAssignment_1_2.eContents().get(0);
		private final Assignment cDomainDescriptionAssignment_1_3 = (Assignment)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cDomainDescriptionDomainDescriptionKeyword_1_3_0 = (Keyword)cDomainDescriptionAssignment_1_3.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cUnorderedGroup_1.eContents().get(4);
		private final Keyword cAliasKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_4_1 = (Keyword)cGroup_1_4.eContents().get(1);
		private final Assignment cAliasAssignment_1_4_2 = (Assignment)cGroup_1_4.eContents().get(2);
		private final RuleCall cAliasIDTerminalRuleCall_1_4_2_0 = (RuleCall)cAliasAssignment_1_4_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_4_3 = (Keyword)cGroup_1_4.eContents().get(3);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeMobaDataTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeMobaDataTypeIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeMobaDataTypeCrossReference_2_0.eContents().get(1);
		private final RuleCall cMobaMultiplicityProviderParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cMobaPropertiesParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//MobaPayloadAttribute:
		//	'var' (lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? &
		//	('alias' '(' alias=ID ')')?) type=[MobaDataType] MobaMultiplicityProvider name=ID MobaProperties?;
		@Override public ParserRule getRule() { return rule; }
		
		//'var' (lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? &
		//('alias' '(' alias=ID ')')?) type=[MobaDataType] MobaMultiplicityProvider name=ID MobaProperties?
		public Group getGroup() { return cGroup; }
		
		//'var'
		public Keyword getVarKeyword_0() { return cVarKeyword_0; }
		
		//(lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? & ('alias'
		//'(' alias=ID ')')?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//lazy?='lazy'?
		public Assignment getLazyAssignment_1_0() { return cLazyAssignment_1_0; }
		
		//'lazy'
		public Keyword getLazyLazyKeyword_1_0_0() { return cLazyLazyKeyword_1_0_0; }
		
		//transient?='transient'?
		public Assignment getTransientAssignment_1_1() { return cTransientAssignment_1_1; }
		
		//'transient'
		public Keyword getTransientTransientKeyword_1_1_0() { return cTransientTransientKeyword_1_1_0; }
		
		//domainKey?='domainKey'?
		public Assignment getDomainKeyAssignment_1_2() { return cDomainKeyAssignment_1_2; }
		
		//'domainKey'
		public Keyword getDomainKeyDomainKeyKeyword_1_2_0() { return cDomainKeyDomainKeyKeyword_1_2_0; }
		
		//domainDescription?='domainDescription'?
		public Assignment getDomainDescriptionAssignment_1_3() { return cDomainDescriptionAssignment_1_3; }
		
		//'domainDescription'
		public Keyword getDomainDescriptionDomainDescriptionKeyword_1_3_0() { return cDomainDescriptionDomainDescriptionKeyword_1_3_0; }
		
		//('alias' '(' alias=ID ')')?
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'alias'
		public Keyword getAliasKeyword_1_4_0() { return cAliasKeyword_1_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_4_1() { return cLeftParenthesisKeyword_1_4_1; }
		
		//alias=ID
		public Assignment getAliasAssignment_1_4_2() { return cAliasAssignment_1_4_2; }
		
		//ID
		public RuleCall getAliasIDTerminalRuleCall_1_4_2_0() { return cAliasIDTerminalRuleCall_1_4_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_4_3() { return cRightParenthesisKeyword_1_4_3; }
		
		//type=[MobaDataType]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[MobaDataType]
		public CrossReference getTypeMobaDataTypeCrossReference_2_0() { return cTypeMobaDataTypeCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeMobaDataTypeIDTerminalRuleCall_2_0_1() { return cTypeMobaDataTypeIDTerminalRuleCall_2_0_1; }
		
		//MobaMultiplicityProvider
		public RuleCall getMobaMultiplicityProviderParserRuleCall_3() { return cMobaMultiplicityProviderParserRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//MobaProperties?
		public RuleCall getMobaPropertiesParserRuleCall_5() { return cMobaPropertiesParserRuleCall_5; }
	}
	public class MobaPayloadReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaPayloadReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cCascadingAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cCascadingCascadingKeyword_1_0_0 = (Keyword)cCascadingAssignment_1_0.eContents().get(0);
		private final Assignment cLazyAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cLazyLazyKeyword_1_1_0 = (Keyword)cLazyAssignment_1_1.eContents().get(0);
		private final Assignment cTransientAssignment_1_2 = (Assignment)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cTransientTransientKeyword_1_2_0 = (Keyword)cTransientAssignment_1_2.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeMobaPayloadCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeMobaPayloadIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeMobaPayloadCrossReference_2_0.eContents().get(1);
		private final RuleCall cMobaMultiplicityProviderParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cMobaPropertiesParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//MobaPayloadReference:
		//	'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaPayload] MobaMultiplicityProvider
		//	name=ID
		//	MobaProperties?;
		@Override public ParserRule getRule() { return rule; }
		
		//'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaPayload] MobaMultiplicityProvider
		//name=ID MobaProperties?
		public Group getGroup() { return cGroup; }
		
		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//(cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//cascading?='cascading'?
		public Assignment getCascadingAssignment_1_0() { return cCascadingAssignment_1_0; }
		
		//'cascading'
		public Keyword getCascadingCascadingKeyword_1_0_0() { return cCascadingCascadingKeyword_1_0_0; }
		
		//lazy?='lazy'?
		public Assignment getLazyAssignment_1_1() { return cLazyAssignment_1_1; }
		
		//'lazy'
		public Keyword getLazyLazyKeyword_1_1_0() { return cLazyLazyKeyword_1_1_0; }
		
		//transient?='transient'?
		public Assignment getTransientAssignment_1_2() { return cTransientAssignment_1_2; }
		
		//'transient'
		public Keyword getTransientTransientKeyword_1_2_0() { return cTransientTransientKeyword_1_2_0; }
		
		//type=[MobaPayload]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[MobaPayload]
		public CrossReference getTypeMobaPayloadCrossReference_2_0() { return cTypeMobaPayloadCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeMobaPayloadIDTerminalRuleCall_2_0_1() { return cTypeMobaPayloadIDTerminalRuleCall_2_0_1; }
		
		//MobaMultiplicityProvider
		public RuleCall getMobaMultiplicityProviderParserRuleCall_3() { return cMobaMultiplicityProviderParserRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//MobaProperties?
		public RuleCall getMobaPropertiesParserRuleCall_5() { return cMobaPropertiesParserRuleCall_5; }
	}
	public class MobaQueueFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaQueueFeature");
		private final RuleCall cMobaQueueReferenceParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//MobaQueueFeature:
		//	MobaQueueReference;
		@Override public ParserRule getRule() { return rule; }
		
		//MobaQueueReference
		public RuleCall getMobaQueueReferenceParserRuleCall() { return cMobaQueueReferenceParserRuleCall; }
	}
	public class MobaQueueReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaQueueReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cCascadingAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cCascadingCascadingKeyword_1_0_0 = (Keyword)cCascadingAssignment_1_0.eContents().get(0);
		private final Assignment cLazyAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cLazyLazyKeyword_1_1_0 = (Keyword)cLazyAssignment_1_1.eContents().get(0);
		private final Assignment cTransientAssignment_1_2 = (Assignment)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cTransientTransientKeyword_1_2_0 = (Keyword)cTransientAssignment_1_2.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeMobaDataCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeMobaDataIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeMobaDataCrossReference_2_0.eContents().get(1);
		private final RuleCall cMobaMultiplicityProviderParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cMobaPropertiesParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//MobaQueueReference:
		//	'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaData] MobaMultiplicityProvider
		//	name=ID
		//	MobaProperties?;
		@Override public ParserRule getRule() { return rule; }
		
		//'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaData] MobaMultiplicityProvider
		//name=ID MobaProperties?
		public Group getGroup() { return cGroup; }
		
		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//(cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//cascading?='cascading'?
		public Assignment getCascadingAssignment_1_0() { return cCascadingAssignment_1_0; }
		
		//'cascading'
		public Keyword getCascadingCascadingKeyword_1_0_0() { return cCascadingCascadingKeyword_1_0_0; }
		
		//lazy?='lazy'?
		public Assignment getLazyAssignment_1_1() { return cLazyAssignment_1_1; }
		
		//'lazy'
		public Keyword getLazyLazyKeyword_1_1_0() { return cLazyLazyKeyword_1_1_0; }
		
		//transient?='transient'?
		public Assignment getTransientAssignment_1_2() { return cTransientAssignment_1_2; }
		
		//'transient'
		public Keyword getTransientTransientKeyword_1_2_0() { return cTransientTransientKeyword_1_2_0; }
		
		//type=[MobaData]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[MobaData]
		public CrossReference getTypeMobaDataCrossReference_2_0() { return cTypeMobaDataCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeMobaDataIDTerminalRuleCall_2_0_1() { return cTypeMobaDataIDTerminalRuleCall_2_0_1; }
		
		//MobaMultiplicityProvider
		public RuleCall getMobaMultiplicityProviderParserRuleCall_3() { return cMobaMultiplicityProviderParserRuleCall_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//MobaProperties?
		public RuleCall getMobaPropertiesParserRuleCall_5() { return cMobaPropertiesParserRuleCall_5; }
	}
	public class MobaMuliplicityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaMuliplicity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLowerAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLowerMobaLowerBoundEnumRuleCall_1_0 = (RuleCall)cLowerAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cUpperAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cUpperMobaUpperBoundEnumRuleCall_2_1_0 = (RuleCall)cUpperAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//MobaMuliplicity:
		//	'[' lower=MobaLowerBound ('..' upper=MobaUpperBound)? ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'[' lower=MobaLowerBound ('..' upper=MobaUpperBound)? ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//lower=MobaLowerBound
		public Assignment getLowerAssignment_1() { return cLowerAssignment_1; }
		
		//MobaLowerBound
		public RuleCall getLowerMobaLowerBoundEnumRuleCall_1_0() { return cLowerMobaLowerBoundEnumRuleCall_1_0; }
		
		//('..' upper=MobaUpperBound)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_2_0() { return cFullStopFullStopKeyword_2_0; }
		
		//upper=MobaUpperBound
		public Assignment getUpperAssignment_2_1() { return cUpperAssignment_2_1; }
		
		//MobaUpperBound
		public RuleCall getUpperMobaUpperBoundEnumRuleCall_2_1_0() { return cUpperMobaUpperBoundEnumRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	
	public class MobaLowerBoundElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaLowerBound");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMANYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMANYAsteriskKeyword_0_0 = (Keyword)cMANYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cZEROEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cZERO0Keyword_1_0 = (Keyword)cZEROEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cOPTIONALEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cOPTIONALQuestionMarkKeyword_2_0 = (Keyword)cOPTIONALEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cATLEASTONEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cATLEASTONEPlusSignKeyword_3_0 = (Keyword)cATLEASTONEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cONEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cONE1Keyword_4_0 = (Keyword)cONEEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum MobaLowerBound:
		//	MANY='*' | ZERO='0' | OPTIONAL='?' | ATLEASTONE='+' | ONE='1';
		public EnumRule getRule() { return rule; }
		
		//MANY='*' | ZERO='0' | OPTIONAL='?' | ATLEASTONE='+' | ONE='1'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MANY='*'
		public EnumLiteralDeclaration getMANYEnumLiteralDeclaration_0() { return cMANYEnumLiteralDeclaration_0; }
		
		//'*'
		public Keyword getMANYAsteriskKeyword_0_0() { return cMANYAsteriskKeyword_0_0; }
		
		//ZERO='0'
		public EnumLiteralDeclaration getZEROEnumLiteralDeclaration_1() { return cZEROEnumLiteralDeclaration_1; }
		
		//'0'
		public Keyword getZERO0Keyword_1_0() { return cZERO0Keyword_1_0; }
		
		//OPTIONAL='?'
		public EnumLiteralDeclaration getOPTIONALEnumLiteralDeclaration_2() { return cOPTIONALEnumLiteralDeclaration_2; }
		
		//'?'
		public Keyword getOPTIONALQuestionMarkKeyword_2_0() { return cOPTIONALQuestionMarkKeyword_2_0; }
		
		//ATLEASTONE='+'
		public EnumLiteralDeclaration getATLEASTONEEnumLiteralDeclaration_3() { return cATLEASTONEEnumLiteralDeclaration_3; }
		
		//'+'
		public Keyword getATLEASTONEPlusSignKeyword_3_0() { return cATLEASTONEPlusSignKeyword_3_0; }
		
		//ONE='1'
		public EnumLiteralDeclaration getONEEnumLiteralDeclaration_4() { return cONEEnumLiteralDeclaration_4; }
		
		//'1'
		public Keyword getONE1Keyword_4_0() { return cONE1Keyword_4_0; }
	}
	public class MobaUpperBoundElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.mobadsl.grammar.Moba.MobaUpperBound");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMANYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMANYAsteriskKeyword_0_0 = (Keyword)cMANYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cONEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cONE1Keyword_1_0 = (Keyword)cONEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum MobaUpperBound:
		//	MANY='*' | ONE='1';
		public EnumRule getRule() { return rule; }
		
		//MANY='*' | ONE='1'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MANY='*'
		public EnumLiteralDeclaration getMANYEnumLiteralDeclaration_0() { return cMANYEnumLiteralDeclaration_0; }
		
		//'*'
		public Keyword getMANYAsteriskKeyword_0_0() { return cMANYAsteriskKeyword_0_0; }
		
		//ONE='1'
		public EnumLiteralDeclaration getONEEnumLiteralDeclaration_1() { return cONEEnumLiteralDeclaration_1; }
		
		//'1'
		public Keyword getONE1Keyword_1_0() { return cONE1Keyword_1_0; }
	}
	
	private final MobaApplicationElements pMobaApplication;
	private final MobaApplicationFeatureElements pMobaApplicationFeature;
	private final MobaTemplateElements pMobaTemplate;
	private final MobaGeneratorElements pMobaGenerator;
	private final MobaDataTypeElements pMobaDataType;
	private final MobaConstantElements pMobaConstant;
	private final MobaPropertiesElements pMobaProperties;
	private final MobaPropertyElements pMobaProperty;
	private final MobaDataElements pMobaData;
	private final MobaSettingsElements pMobaSettings;
	private final MobaCacheElements pMobaCache;
	private final MobaDtoElements pMobaDto;
	private final MobaDtoIndexElements pMobaDtoIndex;
	private final MobaPayloadElements pMobaPayload;
	private final MobaQueueElements pMobaQueue;
	private final MobaServiceElements pMobaService;
	private final MobaRestCustomElements pMobaRestCustom;
	private final MobaRestCrudElements pMobaRestCrud;
	private final MobaDtoFeatureElements pMobaDtoFeature;
	private final MobaDtoAttributeElements pMobaDtoAttribute;
	private final MobaMultiplicityProviderElements pMobaMultiplicityProvider;
	private final MobaDtoReferenceElements pMobaDtoReference;
	private final MobaPayloadFeatureElements pMobaPayloadFeature;
	private final MobaPayloadAttributeElements pMobaPayloadAttribute;
	private final MobaPayloadReferenceElements pMobaPayloadReference;
	private final MobaQueueFeatureElements pMobaQueueFeature;
	private final MobaQueueReferenceElements pMobaQueueReference;
	private final MobaMuliplicityElements pMobaMuliplicity;
	private final MobaLowerBoundElements eMobaLowerBound;
	private final MobaUpperBoundElements eMobaUpperBound;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MobaGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pMobaApplication = new MobaApplicationElements();
		this.pMobaApplicationFeature = new MobaApplicationFeatureElements();
		this.pMobaTemplate = new MobaTemplateElements();
		this.pMobaGenerator = new MobaGeneratorElements();
		this.pMobaDataType = new MobaDataTypeElements();
		this.pMobaConstant = new MobaConstantElements();
		this.pMobaProperties = new MobaPropertiesElements();
		this.pMobaProperty = new MobaPropertyElements();
		this.pMobaData = new MobaDataElements();
		this.pMobaSettings = new MobaSettingsElements();
		this.pMobaCache = new MobaCacheElements();
		this.pMobaDto = new MobaDtoElements();
		this.pMobaDtoIndex = new MobaDtoIndexElements();
		this.pMobaPayload = new MobaPayloadElements();
		this.pMobaQueue = new MobaQueueElements();
		this.pMobaService = new MobaServiceElements();
		this.pMobaRestCustom = new MobaRestCustomElements();
		this.pMobaRestCrud = new MobaRestCrudElements();
		this.pMobaDtoFeature = new MobaDtoFeatureElements();
		this.pMobaDtoAttribute = new MobaDtoAttributeElements();
		this.pMobaMultiplicityProvider = new MobaMultiplicityProviderElements();
		this.pMobaDtoReference = new MobaDtoReferenceElements();
		this.pMobaPayloadFeature = new MobaPayloadFeatureElements();
		this.pMobaPayloadAttribute = new MobaPayloadAttributeElements();
		this.pMobaPayloadReference = new MobaPayloadReferenceElements();
		this.pMobaQueueFeature = new MobaQueueFeatureElements();
		this.pMobaQueueReference = new MobaQueueReferenceElements();
		this.pMobaMuliplicity = new MobaMuliplicityElements();
		this.eMobaLowerBound = new MobaLowerBoundElements();
		this.eMobaUpperBound = new MobaUpperBoundElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.mobadsl.grammar.Moba".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//MobaApplication:
	//	'application' name=ID '{'
	//	features+=MobaApplicationFeature* '}';
	public MobaApplicationElements getMobaApplicationAccess() {
		return pMobaApplication;
	}
	
	public ParserRule getMobaApplicationRule() {
		return getMobaApplicationAccess().getRule();
	}
	
	//MobaApplicationFeature:
	//	MobaDataType | MobaTemplate | MobaConstant | MobaSettings | MobaData | MobaService | MobaGenerator;
	public MobaApplicationFeatureElements getMobaApplicationFeatureAccess() {
		return pMobaApplicationFeature;
	}
	
	public ParserRule getMobaApplicationFeatureRule() {
		return getMobaApplicationFeatureAccess().getRule();
	}
	
	/// **
	// * Will import a Moba-Application.
	// * / MobaTemplate:
	//	'use template' template=[MobaApplication];
	public MobaTemplateElements getMobaTemplateAccess() {
		return pMobaTemplate;
	}
	
	public ParserRule getMobaTemplateRule() {
		return getMobaTemplateAccess().getRule();
	}
	
	//MobaGenerator:
	//	'use generator' (generatorString=STRING | generatorConst=[MobaConstant]);
	public MobaGeneratorElements getMobaGeneratorAccess() {
		return pMobaGenerator;
	}
	
	public ParserRule getMobaGeneratorRule() {
		return getMobaGeneratorAccess().getRule();
	}
	
	//MobaDataType:
	//	'datatype' name=ID (primitive?='isPrimitive'? & array?='isArray'? & ((date?='isDate' | date?='isTime' |
	//	date?='isTimestamp') ('(' (dateFormatString=STRING | dateFormatConstant=[MobaConstant]) ')')?)?) MobaProperties?;
	public MobaDataTypeElements getMobaDataTypeAccess() {
		return pMobaDataType;
	}
	
	public ParserRule getMobaDataTypeRule() {
		return getMobaDataTypeAccess().getRule();
	}
	
	//MobaConstant:
	//	'const' name=ID '=' value=STRING MobaProperties?;
	public MobaConstantElements getMobaConstantAccess() {
		return pMobaConstant;
	}
	
	public ParserRule getMobaConstantRule() {
		return getMobaConstantAccess().getRule();
	}
	
	//fragment MobaProperties:
	//	'[' properties+=MobaProperty (',' properties+=MobaProperty)* ']';
	public MobaPropertiesElements getMobaPropertiesAccess() {
		return pMobaProperties;
	}
	
	public ParserRule getMobaPropertiesRule() {
		return getMobaPropertiesAccess().getRule();
	}
	
	//MobaProperty:
	//	(keyString=STRING | keyConst=[MobaConstant]) '=' (valueString=STRING | valueConst=[MobaConstant]);
	public MobaPropertyElements getMobaPropertyAccess() {
		return pMobaProperty;
	}
	
	public ParserRule getMobaPropertyRule() {
		return getMobaPropertyAccess().getRule();
	}
	
	//MobaData:
	//	MobaDto | MobaPayload | MobaQueue;
	public MobaDataElements getMobaDataAccess() {
		return pMobaData;
	}
	
	public ParserRule getMobaDataRule() {
		return getMobaDataAccess().getRule();
	}
	
	//MobaSettings:
	//	{MobaSettings}
	//	'settings' ('extends' superType=[MobaSettings])? MobaProperties?;
	public MobaSettingsElements getMobaSettingsAccess() {
		return pMobaSettings;
	}
	
	public ParserRule getMobaSettingsRule() {
		return getMobaSettingsAccess().getRule();
	}
	
	//MobaCache:
	//	{MobaCache}
	//	'cache' ('(' (('type' '=' (cacheTypeString=STRING | cacheTypeConst=[MobaConstant]))?
	//	// strategy
	//	& ('strategy' '=' (cacheStrategyString=STRING | cacheStrategyConst=[MobaConstant]))?) ')')?;
	public MobaCacheElements getMobaCacheAccess() {
		return pMobaCache;
	}
	
	public ParserRule getMobaCacheRule() {
		return getMobaCacheAccess().getRule();
	}
	
	//MobaDto:
	//	'dto' name=ID (('extends' superType=[MobaDto])? & cache=MobaCache?) MobaProperties? '{' features+=MobaDtoFeature*
	//	index=MobaDtoIndex?
	//	'}';
	public MobaDtoElements getMobaDtoAccess() {
		return pMobaDto;
	}
	
	public ParserRule getMobaDtoRule() {
		return getMobaDtoAccess().getRule();
	}
	
	//MobaDtoIndex:
	//	'index' attributes+=[MobaDtoAttribute] (',' attributes+=[MobaDtoAttribute]*);
	public MobaDtoIndexElements getMobaDtoIndexAccess() {
		return pMobaDtoIndex;
	}
	
	public ParserRule getMobaDtoIndexRule() {
		return getMobaDtoIndexAccess().getRule();
	}
	
	//MobaPayload:
	//	'payload' name=ID ('extends' superType=[MobaPayload])? MobaProperties? '{'
	//	features+=MobaPayloadFeature*
	//	'}';
	public MobaPayloadElements getMobaPayloadAccess() {
		return pMobaPayload;
	}
	
	public ParserRule getMobaPayloadRule() {
		return getMobaPayloadAccess().getRule();
	}
	
	//MobaQueue:
	//	'queue' name=ID ('extends' superType=[MobaQueue])? MobaProperties? '{'
	//	features+=MobaQueueFeature*
	//	'}';
	public MobaQueueElements getMobaQueueAccess() {
		return pMobaQueue;
	}
	
	public ParserRule getMobaQueueRule() {
		return getMobaQueueAccess().getRule();
	}
	
	//MobaService:
	//	MobaRestCustom | MobaRestCrud;
	public MobaServiceElements getMobaServiceAccess() {
		return pMobaService;
	}
	
	public ParserRule getMobaServiceRule() {
		return getMobaServiceAccess().getRule();
	}
	
	//MobaRestCustom:
	//	'rest' name=ID MobaProperties?;
	public MobaRestCustomElements getMobaRestCustomAccess() {
		return pMobaRestCustom;
	}
	
	public ParserRule getMobaRestCustomRule() {
		return getMobaRestCustomAccess().getRule();
	}
	
	//MobaRestCrud:
	//	'restCrud' name=ID MobaProperties?;
	public MobaRestCrudElements getMobaRestCrudAccess() {
		return pMobaRestCrud;
	}
	
	public ParserRule getMobaRestCrudRule() {
		return getMobaRestCrudAccess().getRule();
	}
	
	//MobaDtoFeature:
	//	MobaDtoAttribute | MobaDtoReference;
	public MobaDtoFeatureElements getMobaDtoFeatureAccess() {
		return pMobaDtoFeature;
	}
	
	public ParserRule getMobaDtoFeatureRule() {
		return getMobaDtoFeatureAccess().getRule();
	}
	
	//MobaDtoAttribute:
	//	'var' (lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'?)
	//	type=[MobaDataType] MobaMultiplicityProvider name=ID MobaProperties?;
	public MobaDtoAttributeElements getMobaDtoAttributeAccess() {
		return pMobaDtoAttribute;
	}
	
	public ParserRule getMobaDtoAttributeRule() {
		return getMobaDtoAttributeAccess().getRule();
	}
	
	//fragment MobaMultiplicityProvider:
	//	multiplicity=MobaMuliplicity?;
	public MobaMultiplicityProviderElements getMobaMultiplicityProviderAccess() {
		return pMobaMultiplicityProvider;
	}
	
	public ParserRule getMobaMultiplicityProviderRule() {
		return getMobaMultiplicityProviderAccess().getRule();
	}
	
	//MobaDtoReference:
	//	'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaDto] MobaMultiplicityProvider
	//	name=ID
	//	MobaProperties?;
	public MobaDtoReferenceElements getMobaDtoReferenceAccess() {
		return pMobaDtoReference;
	}
	
	public ParserRule getMobaDtoReferenceRule() {
		return getMobaDtoReferenceAccess().getRule();
	}
	
	//MobaPayloadFeature:
	//	MobaPayloadAttribute | MobaPayloadReference;
	public MobaPayloadFeatureElements getMobaPayloadFeatureAccess() {
		return pMobaPayloadFeature;
	}
	
	public ParserRule getMobaPayloadFeatureRule() {
		return getMobaPayloadFeatureAccess().getRule();
	}
	
	//MobaPayloadAttribute:
	//	'var' (lazy?='lazy'? & transient?='transient'? & domainKey?='domainKey'? & domainDescription?='domainDescription'? &
	//	('alias' '(' alias=ID ')')?) type=[MobaDataType] MobaMultiplicityProvider name=ID MobaProperties?;
	public MobaPayloadAttributeElements getMobaPayloadAttributeAccess() {
		return pMobaPayloadAttribute;
	}
	
	public ParserRule getMobaPayloadAttributeRule() {
		return getMobaPayloadAttributeAccess().getRule();
	}
	
	//MobaPayloadReference:
	//	'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaPayload] MobaMultiplicityProvider
	//	name=ID
	//	MobaProperties?;
	public MobaPayloadReferenceElements getMobaPayloadReferenceAccess() {
		return pMobaPayloadReference;
	}
	
	public ParserRule getMobaPayloadReferenceRule() {
		return getMobaPayloadReferenceAccess().getRule();
	}
	
	//MobaQueueFeature:
	//	MobaQueueReference;
	public MobaQueueFeatureElements getMobaQueueFeatureAccess() {
		return pMobaQueueFeature;
	}
	
	public ParserRule getMobaQueueFeatureRule() {
		return getMobaQueueFeatureAccess().getRule();
	}
	
	//MobaQueueReference:
	//	'ref' (cascading?='cascading'? & lazy?='lazy'? & transient?='transient'?) type=[MobaData] MobaMultiplicityProvider
	//	name=ID
	//	MobaProperties?;
	public MobaQueueReferenceElements getMobaQueueReferenceAccess() {
		return pMobaQueueReference;
	}
	
	public ParserRule getMobaQueueReferenceRule() {
		return getMobaQueueReferenceAccess().getRule();
	}
	
	//MobaMuliplicity:
	//	'[' lower=MobaLowerBound ('..' upper=MobaUpperBound)? ']';
	public MobaMuliplicityElements getMobaMuliplicityAccess() {
		return pMobaMuliplicity;
	}
	
	public ParserRule getMobaMuliplicityRule() {
		return getMobaMuliplicityAccess().getRule();
	}
	
	//enum MobaLowerBound:
	//	MANY='*' | ZERO='0' | OPTIONAL='?' | ATLEASTONE='+' | ONE='1';
	public MobaLowerBoundElements getMobaLowerBoundAccess() {
		return eMobaLowerBound;
	}
	
	public EnumRule getMobaLowerBoundRule() {
		return getMobaLowerBoundAccess().getRule();
	}
	
	//enum MobaUpperBound:
	//	MANY='*' | ONE='1';
	public MobaUpperBoundElements getMobaUpperBoundAccess() {
		return eMobaUpperBound;
	}
	
	public EnumRule getMobaUpperBoundRule() {
		return getMobaUpperBoundAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
